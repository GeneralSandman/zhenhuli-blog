[0m2021.03.26 10:12:12 INFO  Started: Metals version 0.10.0 in workspace '/Users/zhenhuli/private/zhenhuli-blog' for client vscode 1.54.3.[0m
[0m2021.03.26 10:12:14 INFO  time: initialize in 1.97s[0m
[0m2021.03.26 10:12:14 WARN  Build server is not auto-connectable.[0m
[0m2021.03.26 10:12:14 WARN  no build tool detected in workspace '/Users/zhenhuli/private/zhenhuli-blog'. The most common cause for this problem is that the editor was opened in the wrong working directory, for example if you use sbt then the workspace directory should contain build.sbt. [0m
[0m2021.03.26 10:12:14 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
[0m2021.03.26 10:12:18 INFO  no build target: using presentation compiler with only scala-library: 2.12.13[0m



[0m2021.03.26 10:12:19 INFO  time: code lens generation in 4.37s[0m
[0m2021.03.26 10:12:49 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
object HelloWorld {
    def main(args: Array[String]): Unit = {
        println("Hello, world!")
    }
}
object HelloWorld {
    def main(args: Array[String]): Unit = {
        println("Hello, world!")
    }
}
object HelloWorld {
    def main(args: Array[String]): Unit = {
        println("Hello, world!")
    }
}
object HelloWorld {
    def main(args: Array[String]): Unit = {
        println("Hello, world!")
    }
}
object HelloWorld {
    def main(args: Array[String]): Unit = {
        println("Hello, world!")
    }
}
object HelloWorld {
    def main(args: Array[String]): Unit = {
        println("Hello, world!")
    }
}
object HelloWorld {
    def main(args: Array[String]): Unit = {
        println("Hello, world!")
    }
}
3月 26, 2021 10:14:39 上午 org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
警告: Unmatched cancel notification for request id 91
object HelloWorld {
    def main(args: Array[String]): Unit = {
        println("Hello, world!")
    }
}
object HelloWorld {
    def main(args: Array[String]): Unit = {
        println("Hello, world!")
    }
}
object HelloWorld {
    def main(args: Array[String]): Unit = {
        println("Hello, world!")
    }
}
object HelloWorld {
    def main(args: Array[String]): Unit = {
        println("Hello, world!")
    }
}
something's wrong: no file:///Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala in Array[<error>]RangePosition(file:///Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala, 40, 40, 55)
object HelloWorld {
    def main(args: Array[String]): Unit = {
        println("Hello, world!")
    }
}
something's wrong: no file:///Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala in Array[<error>]RangePosition(file:///Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala, 40, 40, 49)
something's wrong: no file:///Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala in Array[<error>]RangePosition(file:///Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala, 40, 40, 55)
something's wrong: no file:///Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala in Array[<error>]RangePosition(file:///Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala, 40, 40, 48)
something's wrong: no file:///Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala in Array[<error>]RangePosition(file:///Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala, 40, 40, 49)
something's wrong: no file:///Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala in Array[<error>]RangePosition(file:///Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala, 40, 40, 50)
something's wrong: no file:///Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala in Array[<error>]RangePosition(file:///Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala, 40, 40, 51)
something's wrong: no file:///Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala in Array[<error>]RangePosition(file:///Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala, 40, 40, 52)
something's wrong: no file:///Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala in Array[String]RangePosition(file:///Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala, 40, 40, 53)
object HelloWorld {
    def main(args: Array[String]): Unit = {
        println("Hello, world!")
    }
}
something's wrong: no file:///Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala in Array[String]RangePosition(file:///Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala, 40, 40, 53)
object HelloWorld {
    def main(args: Array[String]): Unit = {
        println("Hello, world!")
    }
}
object HelloWorld {
    def main(args: Array[String]): Unit = {
        println("Hello, world!")
    }
}
object HelloWorld {
    def main(args: Array[String]): Unit = {
        println("Hello, world!")
    }
}
object HelloWorld {
    def main(args: Array[String]): Unit = {
        println("Hello, world!")
    }
}
object HelloWorld {
    def main(args: Array[String]): Unit = {
        println("Hello, world!")
    }
}
object HelloWorld {
    def main(args: Array[String]): Unit = {
        println("Hello, world!")
    }
}
object HelloWorld {
    def main(args: Array[String]): Unit = {
        println("Hello, world!")
    }
}
object HelloWorld {
    def main(args: Array[String]): Unit = {
        println("Hello, world!")
    }
}
object HelloWorld {
    def main(args: Array[String]): Unit = {
        println("Hello, world!")
    }
}
[0m2021.03.26 10:15:08 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
object HelloWorld {
    def main(args : Array[String]) {
        println("hello world")
    }
}
object HelloWorld {
    def main(args : Array[String]) {
        println("hello world")
    }
}
object HelloWorld {
    def main(args : Array[String]) {
        println("hello world")
    }
}
object HelloWorld {
    def main(args: Array[String]) {
        println("hello world")
    }
}
[0m2021.03.26 10:18:15 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
object HelloWorld {
    def main(args: Array[String]) {
        println("hello world")
    }
}
object HelloWorld {
    def main(args: Array[String]) {
        println("hello world")
    }
}
object HelloWorld {
    def main(args: Array[String]) {
        println("hello world")
    }
}
object HelloWorld {
    def main(args: Array[String]) {
        println("hello world")
    }
}
[0m2021.03.26 10:18:33 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!") // 输出 Hello World
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!") // 输出 Hello World
   }
}
3月 26, 2021 10:19:28 上午 org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
警告: Unmatched cancel notification for request id 267
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!") // 输出 Hello World
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!") // 输出 Hello World
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!") // 输出 Hello World
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!") // 输出 Hello World
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!") // 输出 Hello World
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!") // 输出 Hello World
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!") // 输出 Hello World
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!") // 输出 Hello World
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!") // 输出 Hello World
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!") // 输出 Hello World
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!") // 输出 Hello World
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!") // 输出 Hello World
   }
}
3月 26, 2021 10:29:28 上午 org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
警告: Unmatched cancel notification for request id 332
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!") // 输出 Hello World
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!") // 输出 Hello World
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!") // 输出 Hello World
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!") // 输出 Hello World
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!") // 输出 Hello World
   }
}
[0m2021.03.26 10:29:54 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test
}
[0m2021.03.26 10:30:06 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       
   }
}
[0m2021.03.26 10:30:45 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
   }
}
[0m2021.03.26 10:30:56 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"
   }
}
[0m2021.03.26 10:31:04 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       stl = "1234"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       stl = "1234"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       stl = "1234"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       stl = "1234"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       stl = "1234"
   }
}
[0m2021.03.26 10:31:13 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       stl = "1234"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       stl = "1234"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       stl = "1234"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       stl = "1234"
   }
}
[0m2021.03.26 10:31:13 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       stl = "1234"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       stl = "1234"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       stl = "1234"
   }
}
[0m2021.03.26 10:31:15 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }
}
3月 26, 2021 10:31:50 上午 org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
警告: Unmatched cancel notification for request id 635
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }
}
[0m2021.03.26 10:34:01 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
       var x = 10;

      if( x < 20 ){
         println("x < 20");
      }
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
       var x = 10;

      if( x < 20 ){
         println("x < 20");
      }
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
       var x = 10;

      if( x < 20 ){
         println("x < 20");
      }
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
       var x = 10;

      if( x < 20 ){
         println("x < 20");
      }
   }
}
[0m2021.03.26 10:34:05 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      }
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      }
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      }
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      }
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      }
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      }
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      }
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      }
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      }
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      }
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      }
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      }
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      }
   }
}
[0m2021.03.26 10:34:37 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }
}
[0m2021.03.26 10:34:47 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }
}
[0m2021.03.26 10:36:59 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
      test3()
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
      test3()
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
      test3()
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }
}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
      test3()
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }
}
[0m2021.03.26 10:37:05 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
      test3()
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
      test3()
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
      test3()
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
      test3()
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
      test3()
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:37:10 上午 scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
信息: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
3月 26, 2021 10:37:10 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: null
java.lang.NullPointerException
	at scala.reflect.internal.Definitions$DefinitionsClass.isByNameParamType(Definitions.scala:417)
	at scala.reflect.internal.TreeInfo.isStableIdent(TreeInfo.scala:140)
	at scala.reflect.internal.TreeInfo.isStableIdentifier(TreeInfo.scala:113)
	at scala.reflect.internal.TreeInfo.isPath(TreeInfo.scala:102)
	at scala.reflect.internal.TreeInfo.admitsTypeSelection(TreeInfo.scala:158)
	at scala.tools.nsc.interactive.Global.stabilizedType(Global.scala:959)
	at scala.tools.nsc.interactive.Global.typedTreeAt(Global.scala:807)
	at scala.meta.internal.pc.SignatureHelpProvider.signatureHelp(SignatureHelpProvider.scala:23)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
      test3()
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
      test3()
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
      test3()
   }

   def test3() {
       
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
[0m2021.03.26 10:37:11 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
      test3()
   }

   def test3() {
       
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
      test3()
   }

   def test3() {
       
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
      test3()
   }

   def test3() {
       
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
      test3()
   }

   def test3() {
       
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
      test3()
   }

   def test3() {
       
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
      test3()
   }

   def test3() {
       
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
      test3()
   }

   def test3() {
       
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
      test3()
   }

   def test3() {
       
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
      test3()
   }

   def test3() {
       
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
      test3()
   }

   def test3() {
       
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
      test3()
   }

   def test3() {
       
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
      test3()
   }

   def test3() {
       
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
      test3()
   }

   def test3() {
       
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
      test3()
   }

   def test3() {
       
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
      test3()
   }

   def test3() {
       
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
      test3()
   }

   def test3() {
       
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
      test3()
   }

   def test3() {
       
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
      test3()
   }

   def test3() {
       
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
      test3()
   }

   def test3() {
       
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
      test3()
   }

   def test3() {
       
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
      test3()
   }

   def test3() {
       
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
      test3()
   }

   def test3() {
       
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
      test3()
   }

   def test3() {
       
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
      test3()
   }

   def test3() {
       
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
      test3()
   }

   def test3() {
       
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
      test3()
   }

   def test3() {
       
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
      test3()
   }

   def test3() {
       
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
      test3()
   }

   def test3() {
       
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
      test3()
   }

   def test3() {
       
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
      test3()
   }

   def test3() {
       
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
      test3()
   }

   def test3() {
       
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
[0m2021.03.26 10:37:47 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test2()
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
[0m2021.03.26 10:37:57 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
[0m2021.03.26 10:38:22 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)

       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)

       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)

       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
/*
 * Scala (https://www.scala-lang.org)
 *
 * Copyright EPFL and Lightbend, Inc.
 *
 * Licensed under Apache License 2.0
 * (http://www.apache.org/licenses/LICENSE-2.0).
 *
 * See the NOTICE file distributed with this work for
 * additional information regarding copyright ownership.
 */

package scala

import scala.language.implicitConversions

import scala.collection.{ mutable, immutable, generic }
import immutable.StringOps
import mutable.ArrayOps
import generic.CanBuildFrom
import scala.annotation.{ elidable, implicitNotFound }
import scala.annotation.elidable.ASSERTION
import scala.io.StdIn

/** The `Predef` object provides definitions that are accessible in all Scala
 *  compilation units without explicit qualification.
 *
 *  === Commonly Used Types ===
 *  Predef provides type aliases for types which are commonly used, such as
 *  the immutable collection types [[scala.collection.immutable.Map]],
 *  [[scala.collection.immutable.Set]], and the [[scala.collection.immutable.List]]
 *  constructors ([[scala.collection.immutable.::]] and
 *  [[scala.collection.immutable.Nil]]).
 *
 *  === Console Output ===
 *  For basic console output, `Predef` provides convenience methods [[print(x:Any* print]] and [[println(x:Any* println]],
 *  which are aliases of the methods in the object [[scala.Console]].
 *
 *  === Assertions ===
 *  A set of `assert` functions are provided for use as a way to document
 *  and dynamically check invariants in code. Invocations of `assert` can be elided
 *  at compile time by providing the command line option `-Xdisable-assertions`,
 *  which raises `-Xelide-below` above `elidable.ASSERTION`, to the `scalac` command.
 *
 *  Variants of `assert` intended for use with static analysis tools are also
 *  provided: `assume`, `require` and `ensuring`. `require` and `ensuring` are
 *  intended for use as a means of design-by-contract style specification
 *  of pre- and post-conditions on functions, with the intention that these
 *  specifications could be consumed by a static analysis tool. For instance,
 *
 *  {{{
 *  def addNaturals(nats: List[Int]): Int = {
 *    require(nats forall (_ >= 0), "List contains negative numbers")
 *    nats.foldLeft(0)(_ + _)
 *  } ensuring(_ >= 0)
 *  }}}
 *
 *  The declaration of `addNaturals` states that the list of integers passed should
 *  only contain natural numbers (i.e. non-negative), and that the result returned
 *  will also be natural. `require` is distinct from `assert` in that if the
 *  condition fails, then the caller of the function is to blame rather than a
 *  logical error having been made within `addNaturals` itself. `ensuring` is a
 *  form of `assert` that declares the guarantee the function is providing with
 *  regards to its return value.
 *
 *  === Implicit Conversions ===
 *  A number of commonly applied implicit conversions are also defined here, and
 *  in the parent type [[scala.LowPriorityImplicits]]. Implicit conversions
 *  are provided for the "widening" of numeric values, for instance, converting a
 *  Short value to a Long value as required, and to add additional higher-order
 *  functions to Array values. These are described in more detail in the documentation of [[scala.Array]].
 *
 * @groupname utilities Utility Methods
 * @groupprio utilities 10
 *
 * @groupname assertions Assertions
 * @groupprio assertions 20
 * @groupdesc assertions These methods support program verification and runtime correctness.
 *
 * @groupname console-output Console Output
 * @groupprio console-output 30
 * @groupdesc console-output These methods provide output via the console.
 *
 * @groupname type-constraints Type Constraints
 * @groupprio type-constraints 40
 * @groupdesc type-constraints These entities allows constraints between types to be stipulated.
 *
 * @groupname aliases Aliases
 * @groupprio aliases 50
 * @groupdesc aliases These aliases bring selected immutable types into scope without any imports.
 *
 * @groupname conversions-string String Conversions
 * @groupprio conversions-string 60
 * @groupdesc conversions-string Conversions to and from String and StringOps.
 *
 * @groupname implicit-classes-any Implicit Classes
 * @groupprio implicit-classes-any 70
 * @groupdesc implicit-classes-any These implicit classes add useful extension methods to every type.
 *
 * @groupname char-sequence-wrappers CharSequence Wrappers
 * @groupprio char-sequence-wrappers 80
 * @groupdesc char-sequence-wrappers Wrappers that implements CharSequence and were implicit classes.
 *
 * @groupname conversions-java-to-anyval Java to Scala
 * @groupprio conversions-java-to-anyval 90
 * @groupdesc conversions-java-to-anyval Implicit conversion from Java primitive wrapper types to Scala equivalents.
 *
 * @groupname conversions-anyval-to-java Scala to Java
 * @groupprio conversions-anyval-to-java 100
 * @groupdesc conversions-anyval-to-java Implicit conversion from Scala AnyVals to Java primitive wrapper types equivalents.
 *
 * @groupname conversions-array-to-wrapped-array Array to WrappedArray
 * @groupprio conversions-array-to-wrapped-array 110
 * @groupdesc conversions-array-to-wrapped-array Conversions from Arrays to WrappedArrays.
 */
object Predef extends LowPriorityImplicits with DeprecatedPredef {
  /**
   * Retrieve the runtime representation of a class type. `classOf[T]` is equivalent to
   * the class literal `T.class` in Java.
   *
   * @example {{{
   * val listClass = classOf[List[_]]
   * // listClass is java.lang.Class[List[_]] = class scala.collection.immutable.List
   *
   * val mapIntString = classOf[Map[Int,String]]
   * // mapIntString is java.lang.Class[Map[Int,String]] = interface scala.collection.immutable.Map
   * }}}
   * @group utilities
   */
  def classOf[T]: Class[T] = null // This is a stub method. The actual implementation is filled in by the compiler.

  /** The `String` type in Scala has methods that come either from the underlying
   *  Java String (see the documentation corresponding to your Java version, for
   *  example [[http://docs.oracle.com/javase/8/docs/api/java/lang/String.html]]) or
   *  are added implicitly through [[scala.collection.immutable.StringOps]].
   *  @group aliases
   */
  type String        = java.lang.String
  /**  @group aliases */
  type Class[T]      = java.lang.Class[T]

  // miscellaneous -----------------------------------------------------
  scala.`package`                         // to force scala package object to be seen.
  scala.collection.immutable.List         // to force Nil, :: to be seen.

  /**  @group aliases */
  type Function[-A, +B] = Function1[A, B]

  /**  @group aliases */
  type Map[A, +B] = immutable.Map[A, B]
  /**  @group aliases */
  type Set[A]     = immutable.Set[A]
  /**  @group aliases */
  val Map         = immutable.Map
  /**  @group aliases */
  val Set         = immutable.Set

  // Manifest types, companions, and incantations for summoning
  @annotation.implicitNotFound(msg = "No ClassManifest available for ${T}.")
  @deprecated("use `scala.reflect.ClassTag` instead", "2.10.0")
  type ClassManifest[T] = scala.reflect.ClassManifest[T]
  // TODO undeprecated until Scala reflection becomes non-experimental
  // @deprecated("this notion doesn't have a corresponding concept in 2.10, because scala.reflect.runtime.universe.TypeTag can capture arbitrary types. Use type tags instead of manifests, and there will be no need in opt manifests.", "2.10.0")
  type OptManifest[T]   = scala.reflect.OptManifest[T]
  @annotation.implicitNotFound(msg = "No Manifest available for ${T}.")
  // TODO undeprecated until Scala reflection becomes non-experimental
  // @deprecated("use `scala.reflect.ClassTag` (to capture erasures) or scala.reflect.runtime.universe.TypeTag (to capture types) or both instead", "2.10.0")
  type Manifest[T]      = scala.reflect.Manifest[T]
  @deprecated("use `scala.reflect.ClassTag` instead", "2.10.0")
  val ClassManifest     = scala.reflect.ClassManifest
  // TODO undeprecated until Scala reflection becomes non-experimental
  // @deprecated("use `scala.reflect.ClassTag` (to capture erasures) or scala.reflect.runtime.universe.TypeTag (to capture types) or both instead", "2.10.0")
  val Manifest          = scala.reflect.Manifest
  // TODO undeprecated until Scala reflection becomes non-experimental
  // @deprecated("this notion doesn't have a corresponding concept in 2.10, because scala.reflect.runtime.universe.TypeTag can capture arbitrary types. Use type tags instead of manifests, and there will be no need in opt manifests.", "2.10.0")
  val NoManifest        = scala.reflect.NoManifest

  // TODO undeprecated until Scala reflection becomes non-experimental
  // @deprecated("use scala.reflect.classTag[T] and scala.reflect.runtime.universe.typeTag[T] instead", "2.10.0")
  def manifest[T](implicit m: Manifest[T])           = m
  @deprecated("use scala.reflect.classTag[T] instead", "2.10.0")
  def classManifest[T](implicit m: ClassManifest[T]) = m
  // TODO undeprecated until Scala reflection becomes non-experimental
  // @deprecated("this notion doesn't have a corresponding concept in 2.10, because scala.reflect.runtime.universe.TypeTag can capture arbitrary types. Use type tags instead of manifests, and there will be no need in opt manifests.", "2.10.0")
  def optManifest[T](implicit m: OptManifest[T])     = m

  // Minor variations on identity functions
  /** @group utilities */
  @inline def identity[A](x: A): A         = x    // @see `conforms` for the implicit version
  /** @group utilities */
  @inline def implicitly[T](implicit e: T) = e    // for summoning implicit values from the nether world -- TODO: when dependent method types are on by default, give this result type `e.type`, so that inliner has better chance of knowing which method to inline in calls like `implicitly[MatchingStrategy[Option]].zero`
  /** @group utilities */
  @inline def locally[T](x: T): T  = x    // to communicate intent and avoid unmoored statements

  // assertions ---------------------------------------------------------

  /** Tests an expression, throwing an `AssertionError` if false.
   *  Calls to this method will not be generated if `-Xelide-below`
   *  is greater than `ASSERTION`.
   *
   *  @see [[scala.annotation.elidable elidable]]
   *  @param assertion   the expression to test
   *  @group assertions
   */
  @elidable(ASSERTION)
  def assert(assertion: Boolean) {
    if (!assertion)
      throw new java.lang.AssertionError("assertion failed")
  }

  /** Tests an expression, throwing an `AssertionError` if false.
   *  Calls to this method will not be generated if `-Xelide-below`
   *  is greater than `ASSERTION`.
   *
   *  @see [[scala.annotation.elidable elidable]]
   *  @param assertion   the expression to test
   *  @param message     a String to include in the failure message
   *  @group assertions
   */
  @elidable(ASSERTION) @inline
  final def assert(assertion: Boolean, message: => Any) {
    if (!assertion)
      throw new java.lang.AssertionError("assertion failed: "+ message)
  }

  /** Tests an expression, throwing an `AssertionError` if false.
   *  This method differs from assert only in the intent expressed:
   *  assert contains a predicate which needs to be proven, while
   *  assume contains an axiom for a static checker.  Calls to this method
   *  will not be generated if `-Xelide-below` is greater than `ASSERTION`.
   *
   *  @see [[scala.annotation.elidable elidable]]
   *  @param assumption   the expression to test
   *  @group assertions
   */
  @elidable(ASSERTION)
  def assume(assumption: Boolean) {
    if (!assumption)
      throw new java.lang.AssertionError("assumption failed")
  }

  /** Tests an expression, throwing an `AssertionError` if false.
   *  This method differs from assert only in the intent expressed:
   *  assert contains a predicate which needs to be proven, while
   *  assume contains an axiom for a static checker.  Calls to this method
   *  will not be generated if `-Xelide-below` is greater than `ASSERTION`.
   *
   *  @see [[scala.annotation.elidable elidable]]
   *  @param assumption   the expression to test
   *  @param message      a String to include in the failure message
   *  @group assertions
   */
  @elidable(ASSERTION) @inline
  final def assume(assumption: Boolean, message: => Any) {
    if (!assumption)
      throw new java.lang.AssertionError("assumption failed: "+ message)
  }

  /** Tests an expression, throwing an `IllegalArgumentException` if false.
   *  This method is similar to `assert`, but blames the caller of the method
   *  for violating the condition.
   *
   *  @param requirement   the expression to test
   *  @group assertions
   */
  def require(requirement: Boolean) {
    if (!requirement)
      throw new IllegalArgumentException("requirement failed")
  }

  /** Tests an expression, throwing an `IllegalArgumentException` if false.
   *  This method is similar to `assert`, but blames the caller of the method
   *  for violating the condition.
   *
   *  @param requirement   the expression to test
   *  @param message       a String to include in the failure message
   *  @group assertions
   */
  @inline final def require(requirement: Boolean, message: => Any) {
    if (!requirement)
      throw new IllegalArgumentException("requirement failed: "+ message)
  }

  /** `???` can be used for marking methods that remain to be implemented.
   *  @throws NotImplementedError
   *  @group utilities
   */
  def ??? : Nothing = throw new NotImplementedError

  // tupling ------------------------------------------------------------

  @deprecated("use built-in tuple syntax or Tuple2 instead", "2.11.0")
  type Pair[+A, +B] = Tuple2[A, B]
  @deprecated("use built-in tuple syntax or Tuple2 instead", "2.11.0")
  object Pair {
    def apply[A, B](x: A, y: B) = Tuple2(x, y)
    def unapply[A, B](x: Tuple2[A, B]): Option[Tuple2[A, B]] = Some(x)
  }

  @deprecated("use built-in tuple syntax or Tuple3 instead", "2.11.0")
  type Triple[+A, +B, +C] = Tuple3[A, B, C]
  @deprecated("use built-in tuple syntax or Tuple3 instead", "2.11.0")
  object Triple {
    def apply[A, B, C](x: A, y: B, z: C) = Tuple3(x, y, z)
    def unapply[A, B, C](x: Tuple3[A, B, C]): Option[Tuple3[A, B, C]] = Some(x)
  }

  // implicit classes -----------------------------------------------------

  /** @group implicit-classes-any */
  implicit final class ArrowAssoc[A](private val self: A) extends AnyVal {
    @inline def -> [B](y: B): Tuple2[A, B] = Tuple2(self, y)
    def →[B](y: B): Tuple2[A, B] = ->(y)
  }

  /** @group implicit-classes-any */
  implicit final class Ensuring[A](private val self: A) extends AnyVal {
    def ensuring(cond: Boolean): A = { assert(cond); self }
    def ensuring(cond: Boolean, msg: => Any): A = { assert(cond, msg); self }
    def ensuring(cond: A => Boolean): A = { assert(cond(self)); self }
    def ensuring(cond: A => Boolean, msg: => Any): A = { assert(cond(self), msg); self }
  }

  /** @group implicit-classes-any */
  implicit final class StringFormat[A](private val self: A) extends AnyVal {
    /** Returns string formatted according to given `format` string.
     *  Format strings are as for `String.format`
     *  (@see java.lang.String.format).
     */
    @inline def formatted(fmtstr: String): String = fmtstr format self
  }

  // scala/bug#8229 retaining the pre 2.11 name for source compatibility in shadowing this implicit
  /** @group implicit-classes-any */
  implicit final class any2stringadd[A](private val self: A) extends AnyVal {
    def +(other: String): String = String.valueOf(self) + other
  }

  implicit final class RichException(private val self: Throwable) extends AnyVal {
    import scala.compat.Platform.EOL
    @deprecated("use Throwable#getStackTrace", "2.11.0") def getStackTraceString = self.getStackTrace().mkString("", EOL, EOL)
  }

  // Sadly we have to do `@deprecatedName(null, "2.12.0")` because
  // `@deprecatedName(since="2.12.0")` incurs a warning about
  //   Usage of named or default arguments transformed this annotation constructor call into a block.
  //   The corresponding AnnotationInfo will contain references to local values and default getters
  //   instead of the actual argument trees
  // and `@deprecatedName(Symbol("<none>"), "2.12.0")` crashes scalac with
  //   scala.reflect.internal.Symbols$CyclicReference: illegal cyclic reference involving object Symbol
  // in run/repl-no-imports-no-predef-power.scala.
  /** @group char-sequence-wrappers */
  final class SeqCharSequence(@deprecated("will be made private", "2.12.0") @deprecatedName(null, "2.12.0") val __sequenceOfChars: scala.collection.IndexedSeq[Char]) extends CharSequence {
    def length: Int                                     = __sequenceOfChars.length
    def charAt(index: Int): Char                        = __sequenceOfChars(index)
    def subSequence(start: Int, end: Int): CharSequence = new SeqCharSequence(__sequenceOfChars.slice(start, end))
    override def toString                               = __sequenceOfChars mkString ""
  }

  /** @group char-sequence-wrappers */
  def SeqCharSequence(sequenceOfChars: scala.collection.IndexedSeq[Char]): SeqCharSequence = new SeqCharSequence(sequenceOfChars)

  /** @group char-sequence-wrappers */
  @deprecated("use `java.nio.CharBuffer.wrap` instead", "2.12.13")
  final class ArrayCharSequence(@deprecated("will be made private", "2.12.0") @deprecatedName(null, "2.12.0") val __arrayOfChars: Array[Char]) extends CharSequence {
    def length: Int                                     = __arrayOfChars.length
    def charAt(index: Int): Char                        = __arrayOfChars(index)
    def subSequence(start: Int, end: Int): CharSequence = new runtime.ArrayCharSequence(__arrayOfChars, start, end)
    override def toString                               = __arrayOfChars mkString ""
  }

  /** @group char-sequence-wrappers */
  def ArrayCharSequence(arrayOfChars: Array[Char]): ArrayCharSequence = new ArrayCharSequence(arrayOfChars)

  implicit val StringCanBuildFrom: CanBuildFrom[String, Char, String] = new CanBuildFrom[String, Char, String] {
    def apply(from: String) = apply()
    def apply()             = mutable.StringBuilder.newBuilder
  }

  /** @group conversions-string */
  @inline implicit def augmentString(x: String): StringOps = new StringOps(x)
  /** @group conversions-string */
  @inline implicit def unaugmentString(x: StringOps): String = x.repr

  // printing -----------------------------------------------------------

  /** Prints an object to `out` using its `toString` method.
   *
   *  @param x the object to print; may be null.
   *  @group console-output
   */
  def print(x: Any) = Console.print(x)

  /** Prints a newline character on the default output.
   *  @group console-output
   */
  def println() = Console.println()

  /** Prints out an object to the default output, followed by a newline character.
   *
   *  @param x the object to print.
   *  @group console-output
   */
  def println(x: Any) = Console.println(x)

  /** Prints its arguments as a formatted string to the default output,
   *  based on a string pattern (in a fashion similar to printf in C).
   *
   *  The interpretation of the formatting patterns is described in
   *  [[java.util.Formatter]].
   *
   *  Consider using the [[scala.StringContext.f f interpolator]] as more type safe and idiomatic.
   *
   *  @param text the pattern for formatting the arguments.
   *  @param args the arguments used to instantiating the pattern.
   *  @throws java.lang.IllegalArgumentException if there was a problem with the format string or arguments
   *
   *  @see [[scala.StringContext.f StringContext.f]]
   *  @group console-output
   */
  def printf(text: String, xs: Any*) = Console.print(text.format(xs: _*))

  // views --------------------------------------------------------------

  implicit def tuple2ToZippedOps[T1, T2](x: (T1, T2))                           = new runtime.Tuple2Zipped.Ops(x)
  implicit def tuple3ToZippedOps[T1, T2, T3](x: (T1, T2, T3))                   = new runtime.Tuple3Zipped.Ops(x)

  implicit def genericArrayOps[T](xs: Array[T]): ArrayOps[T] = (xs match {
    case x: Array[AnyRef]  => refArrayOps[AnyRef](x)
    case x: Array[Boolean] => booleanArrayOps(x)
    case x: Array[Byte]    => byteArrayOps(x)
    case x: Array[Char]    => charArrayOps(x)
    case x: Array[Double]  => doubleArrayOps(x)
    case x: Array[Float]   => floatArrayOps(x)
    case x: Array[Int]     => intArrayOps(x)
    case x: Array[Long]    => longArrayOps(x)
    case x: Array[Short]   => shortArrayOps(x)
    case x: Array[Unit]    => unitArrayOps(x)
    case null              => null
  }).asInstanceOf[ArrayOps[T]]

  implicit def booleanArrayOps(xs: Array[Boolean]): ArrayOps.ofBoolean   = new ArrayOps.ofBoolean(xs)
  implicit def byteArrayOps(xs: Array[Byte]): ArrayOps.ofByte            = new ArrayOps.ofByte(xs)
  implicit def charArrayOps(xs: Array[Char]): ArrayOps.ofChar            = new ArrayOps.ofChar(xs)
  implicit def doubleArrayOps(xs: Array[Double]): ArrayOps.ofDouble      = new ArrayOps.ofDouble(xs)
  implicit def floatArrayOps(xs: Array[Float]): ArrayOps.ofFloat         = new ArrayOps.ofFloat(xs)
  implicit def intArrayOps(xs: Array[Int]): ArrayOps.ofInt               = new ArrayOps.ofInt(xs)
  implicit def longArrayOps(xs: Array[Long]): ArrayOps.ofLong            = new ArrayOps.ofLong(xs)
  implicit def refArrayOps[T <: AnyRef](xs: Array[T]): ArrayOps.ofRef[T] = new ArrayOps.ofRef[T](xs)
  implicit def shortArrayOps(xs: Array[Short]): ArrayOps.ofShort         = new ArrayOps.ofShort(xs)
  implicit def unitArrayOps(xs: Array[Unit]): ArrayOps.ofUnit            = new ArrayOps.ofUnit(xs)

  // "Autoboxing" and "Autounboxing" ---------------------------------------------------

  /** @group conversions-anyval-to-java */
  implicit def byte2Byte(x: Byte): java.lang.Byte             = x.asInstanceOf[java.lang.Byte]
  /** @group conversions-anyval-to-java */
  implicit def short2Short(x: Short): java.lang.Short         = x.asInstanceOf[java.lang.Short]
  /** @group conversions-anyval-to-java */
  implicit def char2Character(x: Char): java.lang.Character   = x.asInstanceOf[java.lang.Character]
  /** @group conversions-anyval-to-java */
  implicit def int2Integer(x: Int): java.lang.Integer         = x.asInstanceOf[java.lang.Integer]
  /** @group conversions-anyval-to-java */
  implicit def long2Long(x: Long): java.lang.Long             = x.asInstanceOf[java.lang.Long]
  /** @group conversions-anyval-to-java */
  implicit def float2Float(x: Float): java.lang.Float         = x.asInstanceOf[java.lang.Float]
  /** @group conversions-anyval-to-java */
  implicit def double2Double(x: Double): java.lang.Double     = x.asInstanceOf[java.lang.Double]
  /** @group conversions-anyval-to-java */
  implicit def boolean2Boolean(x: Boolean): java.lang.Boolean = x.asInstanceOf[java.lang.Boolean]

  /** @group conversions-java-to-anyval */
  implicit def Byte2byte(x: java.lang.Byte): Byte             = x.asInstanceOf[Byte]
  /** @group conversions-java-to-anyval */
  implicit def Short2short(x: java.lang.Short): Short         = x.asInstanceOf[Short]
  /** @group conversions-java-to-anyval */
  implicit def Character2char(x: java.lang.Character): Char   = x.asInstanceOf[Char]
  /** @group conversions-java-to-anyval */
  implicit def Integer2int(x: java.lang.Integer): Int         = x.asInstanceOf[Int]
  /** @group conversions-java-to-anyval */
  implicit def Long2long(x: java.lang.Long): Long             = x.asInstanceOf[Long]
  /** @group conversions-java-to-anyval */
  implicit def Float2float(x: java.lang.Float): Float         = x.asInstanceOf[Float]
  /** @group conversions-java-to-anyval */
  implicit def Double2double(x: java.lang.Double): Double     = x.asInstanceOf[Double]
  /** @group conversions-java-to-anyval */
  implicit def Boolean2boolean(x: java.lang.Boolean): Boolean = x.asInstanceOf[Boolean]

  // Type Constraints --------------------------------------------------------------

  /**
   * An instance of `A <:< B` witnesses that `A` is a subtype of `B`.
   * Requiring an implicit argument of the type `A <:< B` encodes
   * the generalized constraint `A <: B`.
   *
   * @note we need a new type constructor `<:<` and evidence `conforms`,
   * as reusing `Function1` and `identity` leads to ambiguities in
   * case of type errors (`any2stringadd` is inferred)
   *
   * To constrain any abstract type T that's in scope in a method's
   * argument list (not just the method's own type parameters) simply
   * add an implicit argument of type `T <:< U`, where `U` is the required
   * upper bound; or for lower-bounds, use: `L <:< T`, where `L` is the
   * required lower bound.
   *
   * In part contributed by Jason Zaugg.
   * @group type-constraints
   */
  @implicitNotFound(msg = "Cannot prove that ${From} <:< ${To}.")
  sealed abstract class <:<[-From, +To] extends (From => To) with Serializable
  private[this] final val singleton_<:< = new <:<[Any,Any] { def apply(x: Any): Any = x }
  // The dollar prefix is to dodge accidental shadowing of this method
  // by a user-defined method of the same name (scala/bug#7788).
  // The collections rely on this method.
  /** @group type-constraints */
  implicit def $conforms[A]: A <:< A = singleton_<:<.asInstanceOf[A <:< A]

  @deprecated("use `implicitly[T <:< U]` or `identity` instead.", "2.11.0")
  def conforms[A]: A <:< A = $conforms[A]

  /** An instance of `A =:= B` witnesses that the types `A` and `B` are equal.
   *
   * @see `<:<` for expressing subtyping constraints
   * @group type-constraints
   */
  @implicitNotFound(msg = "Cannot prove that ${From} =:= ${To}.")
  sealed abstract class =:=[From, To] extends (From => To) with Serializable
  private[this] final val singleton_=:= = new =:=[Any,Any] { def apply(x: Any): Any = x }
  /** @group type-constraints */
  object =:= {
     implicit def tpEquals[A]: A =:= A = singleton_=:=.asInstanceOf[A =:= A]
  }

  /** A type for which there is always an implicit value.
   *  @see [[scala.Array$]], method `fallbackCanBuildFrom`
   */
  class DummyImplicit

  object DummyImplicit {

    /** An implicit value yielding a `DummyImplicit`.
     *   @see [[scala.Array$]], method `fallbackCanBuildFrom`
     */
    implicit def dummyImplicit: DummyImplicit = new DummyImplicit
  }
}

private[scala] trait DeprecatedPredef {
  self: Predef.type =>

  // Deprecated stubs for any who may have been calling these methods directly.
  @deprecated("use `ArrowAssoc`", "2.11.0") def any2ArrowAssoc[A](x: A): ArrowAssoc[A]                                      = new ArrowAssoc(x)
  @deprecated("use `Ensuring`", "2.11.0") def any2Ensuring[A](x: A): Ensuring[A]                                            = new Ensuring(x)
  @deprecated("use `StringFormat`", "2.11.0") def any2stringfmt(x: Any): StringFormat[Any]                                  = new StringFormat(x)
  @deprecated("use `Throwable` directly", "2.11.0") def exceptionWrapper(exc: Throwable)                                    = new RichException(exc)
  @deprecated("use `SeqCharSequence`", "2.11.0") def seqToCharSequence(xs: scala.collection.IndexedSeq[Char]): CharSequence = new SeqCharSequence(xs)
  @deprecated("use `java.nio.CharBuffer.wrap`", "2.11.0") def arrayToCharSequence(xs: Array[Char]): CharSequence = new ArrayCharSequence(xs)

  @deprecated("use the method in `scala.io.StdIn`", "2.11.0") def readLine(): String                 = StdIn.readLine()
  @deprecated("use the method in `scala.io.StdIn`", "2.11.0") def readLine(text: String, args: Any*) = StdIn.readLine(text, args: _*)
  @deprecated("use the method in `scala.io.StdIn`", "2.11.0") def readBoolean()                      = StdIn.readBoolean()
  @deprecated("use the method in `scala.io.StdIn`", "2.11.0") def readByte()                         = StdIn.readByte()
  @deprecated("use the method in `scala.io.StdIn`", "2.11.0") def readShort()                        = StdIn.readShort()
  @deprecated("use the method in `scala.io.StdIn`", "2.11.0") def readChar()                         = StdIn.readChar()
  @deprecated("use the method in `scala.io.StdIn`", "2.11.0") def readInt()                          = StdIn.readInt()
  @deprecated("use the method in `scala.io.StdIn`", "2.11.0") def readLong()                         = StdIn.readLong()
  @deprecated("use the method in `scala.io.StdIn`", "2.11.0") def readFloat()                        = StdIn.readFloat()
  @deprecated("use the method in `scala.io.StdIn`", "2.11.0") def readDouble()                       = StdIn.readDouble()
  @deprecated("use the method in `scala.io.StdIn`", "2.11.0") def readf(format: String)              = StdIn.readf(format)
  @deprecated("use the method in `scala.io.StdIn`", "2.11.0") def readf1(format: String)             = StdIn.readf1(format)
  @deprecated("use the method in `scala.io.StdIn`", "2.11.0") def readf2(format: String)             = StdIn.readf2(format)
  @deprecated("use the method in `scala.io.StdIn`", "2.11.0") def readf3(format: String)             = StdIn.readf3(format)
}

/** The `LowPriorityImplicits` class provides implicit values that
*  are valid in all Scala compilation units without explicit qualification,
*  but that are partially overridden by higher-priority conversions in object
*  `Predef`.
*
*  @author  Martin Odersky
*  @since 2.8
*/
// scala/bug#7335 Parents of Predef are defined in the same compilation unit to avoid
// cyclic reference errors compiling the standard library *without* a previously
// compiled copy on the classpath.
private[scala] abstract class LowPriorityImplicits {
  import mutable.WrappedArray
  import immutable.WrappedString

  /** We prefer the java.lang.* boxed types to these wrappers in
   *  any potential conflicts.  Conflicts do exist because the wrappers
   *  need to implement ScalaNumber in order to have a symmetric equals
   *  method, but that implies implementing java.lang.Number as well.
   *
   *  Note - these are inlined because they are value classes, but
   *  the call to xxxWrapper is not eliminated even though it does nothing.
   *  Even inlined, every call site does a no-op retrieval of Predef's MODULE$
   *  because maybe loading Predef has side effects!
   */
  @inline implicit def byteWrapper(x: Byte)       = new runtime.RichByte(x)
  @inline implicit def shortWrapper(x: Short)     = new runtime.RichShort(x)
  @inline implicit def intWrapper(x: Int)         = new runtime.RichInt(x)
  @inline implicit def charWrapper(c: Char)       = new runtime.RichChar(c)
  @inline implicit def longWrapper(x: Long)       = new runtime.RichLong(x)
  @inline implicit def floatWrapper(x: Float)     = new runtime.RichFloat(x)
  @inline implicit def doubleWrapper(x: Double)   = new runtime.RichDouble(x)
  @inline implicit def booleanWrapper(x: Boolean) = new runtime.RichBoolean(x)

  /** @group conversions-array-to-wrapped-array */
  implicit def genericWrapArray[T](xs: Array[T]): WrappedArray[T] =
    if (xs eq null) null
    else WrappedArray.make(xs)

  // Since the JVM thinks arrays are covariant, one 0-length Array[AnyRef]
  // is as good as another for all T <: AnyRef.  Instead of creating 100,000,000
  // unique ones by way of this implicit, let's share one.
  /** @group conversions-array-to-wrapped-array */
  implicit def wrapRefArray[T <: AnyRef](xs: Array[T]): WrappedArray[T] = {
    if (xs eq null) null
    else if (xs.length == 0) WrappedArray.empty[T]
    else new WrappedArray.ofRef[T](xs)
  }

  /** @group conversions-array-to-wrapped-array */
  implicit def wrapIntArray(xs: Array[Int]): WrappedArray[Int] = if (xs ne null) new WrappedArray.ofInt(xs) else null
  /** @group conversions-array-to-wrapped-array */
  implicit def wrapDoubleArray(xs: Array[Double]): WrappedArray[Double] = if (xs ne null) new WrappedArray.ofDouble(xs) else null
  /** @group conversions-array-to-wrapped-array */
  implicit def wrapLongArray(xs: Array[Long]): WrappedArray[Long] = if (xs ne null) new WrappedArray.ofLong(xs) else null
  /** @group conversions-array-to-wrapped-array */
  implicit def wrapFloatArray(xs: Array[Float]): WrappedArray[Float] = if (xs ne null) new WrappedArray.ofFloat(xs) else null
  /** @group conversions-array-to-wrapped-array */
  implicit def wrapCharArray(xs: Array[Char]): WrappedArray[Char] = if (xs ne null) new WrappedArray.ofChar(xs) else null
  /** @group conversions-array-to-wrapped-array */
  implicit def wrapByteArray(xs: Array[Byte]): WrappedArray[Byte] = if (xs ne null) new WrappedArray.ofByte(xs) else null
  /** @group conversions-array-to-wrapped-array */
  implicit def wrapShortArray(xs: Array[Short]): WrappedArray[Short] = if (xs ne null) new WrappedArray.ofShort(xs) else null
  /** @group conversions-array-to-wrapped-array */
  implicit def wrapBooleanArray(xs: Array[Boolean]): WrappedArray[Boolean] = if (xs ne null) new WrappedArray.ofBoolean(xs) else null
  /** @group conversions-array-to-wrapped-array */
  implicit def wrapUnitArray(xs: Array[Unit]): WrappedArray[Unit] = if (xs ne null) new WrappedArray.ofUnit(xs) else null

  /** @group conversions-string */
  implicit def wrapString(s: String): WrappedString = if (s ne null) new WrappedString(s) else null
  /** @group conversions-string */
  implicit def unwrapString(ws: WrappedString): String = if (ws ne null) ws.self else null

  implicit def fallbackStringCanBuildFrom[T]: CanBuildFrom[String, T, immutable.IndexedSeq[T]] =
    new CanBuildFrom[String, T, immutable.IndexedSeq[T]] {
      def apply(from: String) = immutable.IndexedSeq.newBuilder[T]
      def apply() = immutable.IndexedSeq.newBuilder[T]
    }
}

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)

       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
[0m2021.03.26 10:38:35 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
/*
 * Scala (https://www.scala-lang.org)
 *
 * Copyright EPFL and Lightbend, Inc.
 *
 * Licensed under Apache License 2.0
 * (http://www.apache.org/licenses/LICENSE-2.0).
 *
 * See the NOTICE file distributed with this work for
 * additional information regarding copyright ownership.
 */

package scala
package collection.immutable

import scala.collection.parallel.immutable.ParRange

/** The `Range` class represents integer values in range
 *  ''[start;end)'' with non-zero step value `step`.
 *  It's a special case of an indexed sequence.
 *  For example:
 *
 *  {{{
 *     val r1 = 0 until 10
 *     val r2 = r1.start until r1.end by r1.step + 1
 *     println(r2.length) // = 5
 *  }}}
 *
 *  Ranges that contain more than `Int.MaxValue` elements can be created, but
 *  these overfull ranges have only limited capabilities.  Any method that
 *  could require a collection of over `Int.MaxValue` length to be created, or
 *  could be asked to index beyond `Int.MaxValue` elements will throw an
 *  exception.  Overfull ranges can safely be reduced in size by changing
 *  the step size (e.g. `by 3`) or taking/dropping elements.  `contains`,
 *  `equals`, and access to the ends of the range (`head`, `last`, `tail`,
 *  `init`) are also permitted on overfull ranges.
 *
 *  @param start      the start of this range.
 *  @param end        the end of the range.  For exclusive ranges, e.g.
 *                    `Range(0,3)` or `(0 until 3)`, this is one
 *                    step past the last one in the range.  For inclusive
 *                    ranges, e.g. `Range.inclusive(0,3)` or `(0 to 3)`,
 *                    it may be in the range if it is not skipped by the step size.
 *                    To find the last element inside a non-empty range,
                      use `last` instead.
 *  @param step       the step for the range.
 *
 *  @author Martin Odersky
 *  @author Paul Phillips
 *  @since   2.5
 *  @see [[http://docs.scala-lang.org/overviews/collections/concrete-immutable-collection-classes.html#ranges "Scala's Collection Library overview"]]
 *  section on `Ranges` for more information.
 *
 *  @define coll range
 *  @define mayNotTerminateInf
 *  @define willNotTerminateInf
 *  @define doesNotUseBuilders
 *    '''Note:''' this method does not use builders to construct a new range,
 *         and its complexity is O(1).
 */
@SerialVersionUID(7618862778670199309L)
sealed class Range(val start: Int, val end: Int, val step: Int)
extends scala.collection.AbstractSeq[Int]
   with IndexedSeq[Int]
   with scala.collection.CustomParallelizable[Int, ParRange]
   with Serializable
{
  override def par = new ParRange(this)

  private def gap           = end.toLong - start.toLong
  private def isExact       = gap % step == 0
  private def hasStub       = isInclusive || !isExact
  private def longLength    = gap / step + ( if (hasStub) 1 else 0 )

  // Check cannot be evaluated eagerly because we have a pattern where
  // ranges are constructed like: "x to y by z" The "x to y" piece
  // should not trigger an exception. So the calculation is delayed,
  // which means it will not fail fast for those cases where failing was
  // correct.
  override final val isEmpty = (
       (start > end && step > 0)
    || (start < end && step < 0)
    || (start == end && !isInclusive)
  )

  private val numRangeElements: Int = {
    if (step == 0) throw new IllegalArgumentException("step cannot be 0.")
    else if (isEmpty) 0
    else {
      val len = longLength
      if (len > scala.Int.MaxValue) -1
      else len.toInt
    }
  }

  // This field has a sensible value only for non-empty ranges
  private val lastElement = step match {
    case 1  => if (isInclusive) end else end-1
    case -1 => if (isInclusive) end else end+1
    case _  =>
      val remainder = (gap % step).toInt
      if (remainder != 0) end - remainder
      else if (isInclusive) end
      else end - step
  }

  /** The last element of this range.  This method will return the correct value
   *  even if there are too many elements to iterate over.
   */
  override def last = if (isEmpty) Nil.last else lastElement
  override def head = if (isEmpty) Nil.head else start

  override def min[A1 >: Int](implicit ord: Ordering[A1]): Int =
    if (ord eq Ordering.Int) {
      if (step > 0) head
      else last
    } else super.min(ord)

  override def max[A1 >: Int](implicit ord: Ordering[A1]): Int =
    if (ord eq Ordering.Int) {
      if (step > 0) last
      else head
    } else super.max(ord)

  protected def copy(start: Int, end: Int, step: Int): Range = new Range(start, end, step)

  /** Create a new range with the `start` and `end` values of this range and
   *  a new `step`.
   *
   *  @return a new range with a different step
   */
  def by(step: Int): Range = copy(start, end, step)

  def isInclusive = false

  override def size = length
  override def length = if (numRangeElements < 0) fail() else numRangeElements

  private def description = "%d %s %d by %s".format(start, if (isInclusive) "to" else "until", end, step)
  private def fail() = throw new IllegalArgumentException(description + ": seqs cannot contain more than Int.MaxValue elements.")
  private def validateMaxLength() {
    if (numRangeElements < 0)
      fail()
  }

  final def apply(idx: Int): Int = {
    validateMaxLength()
    if (idx < 0 || idx >= numRangeElements) throw new IndexOutOfBoundsException(idx.toString)
    else start + (step * idx)
  }

  @inline final override def foreach[@specialized(Unit) U](f: Int => U) {
    // Implementation chosen on the basis of favorable microbenchmarks
    // Note--initialization catches step == 0 so we don't need to here
    if (!isEmpty) {
      var i = start
      while (true) {
        f(i)
        if (i == lastElement) return
        i += step
      }
    }
  }

  /** Creates a new range containing the first `n` elements of this range.
   *
   *  $doesNotUseBuilders
   *
   *  @param n  the number of elements to take.
   *  @return   a new range consisting of `n` first elements.
   */
  final override def take(n: Int): Range = (
    if (n <= 0 || isEmpty) newEmptyRange(start)
    else if (n >= numRangeElements && numRangeElements >= 0) this
    else {
      // May have more than Int.MaxValue elements in range (numRangeElements < 0)
      // but the logic is the same either way: take the first n
      new Range.Inclusive(start, locationAfterN(n - 1), step)
    }
  )

  /** Creates a new range containing all the elements of this range except the first `n` elements.
   *
   *  $doesNotUseBuilders
   *
   *  @param n  the number of elements to drop.
   *  @return   a new range consisting of all the elements of this range except `n` first elements.
   */
  final override def drop(n: Int): Range = (
    if (n <= 0 || isEmpty) this
    else if (n >= numRangeElements && numRangeElements >= 0) newEmptyRange(end)
    else {
      // May have more than Int.MaxValue elements (numRangeElements < 0)
      // but the logic is the same either way: go forwards n steps, keep the rest
      copy(locationAfterN(n), end, step)
    }
  )

  /** Creates a new range containing the elements starting at `from` up to but not including `until`.
   *
   *  $doesNotUseBuilders
   *
   *  @param from  the element at which to start
   *  @param until  the element at which to end (not included in the range)
   *  @return   a new range consisting of a contiguous interval of values in the old range
   */
  override def slice(from: Int, until: Int): Range =
    if (from <= 0) take(until)
    else if (until >= numRangeElements && numRangeElements >= 0) drop(from)
    else {
      val fromValue = locationAfterN(from)
      if (from >= until) newEmptyRange(fromValue)
      else new Range.Inclusive(fromValue, locationAfterN(until-1), step)
    }

  /** Creates a new range containing all the elements of this range except the last one.
   *
   *  $doesNotUseBuilders
   *
   *  @return  a new range consisting of all the elements of this range except the last one.
   */
  final override def init: Range = {
    if (isEmpty)
      Nil.init

    dropRight(1)
  }

  /** Creates a new range containing all the elements of this range except the first one.
   *
   *  $doesNotUseBuilders
   *
   *  @return  a new range consisting of all the elements of this range except the first one.
   */
  final override def tail: Range = {
    if (isEmpty)
      Nil.tail

    drop(1)
  }

  // Advance from the start while we meet the given test
  private def argTakeWhile(p: Int => Boolean): Long = {
    if (isEmpty) start
    else {
      var current = start
      val stop = last
      while (current != stop && p(current)) current += step
      if (current != stop || !p(current)) current
      else current.toLong + step
    }
  }
  // Methods like apply throw exceptions on invalid n, but methods like take/drop
  // are forgiving: therefore the checks are with the methods.
  private def locationAfterN(n: Int) = start + (step * n)

  // When one drops everything.  Can't ever have unchecked operations
  // like "end + 1" or "end - 1" because ranges involving Int.{ MinValue, MaxValue }
  // will overflow.  This creates an exclusive range where start == end
  // based on the given value.
  private def newEmptyRange(value: Int) = new Range(value, value, step)

  final override def takeWhile(p: Int => Boolean): Range = {
    val stop = argTakeWhile(p)
    if (stop==start) newEmptyRange(start)
    else {
      val x = (stop - step).toInt
      if (x == last) this
      else new Range.Inclusive(start, x, step)
    }
  }
  final override def dropWhile(p: Int => Boolean): Range = {
    val stop = argTakeWhile(p)
    if (stop == start) this
    else {
      val x = (stop - step).toInt
      if (x == last) newEmptyRange(last)
      else new Range.Inclusive(x + step, last, step)
    }
  }
  final override def span(p: Int => Boolean): (Range, Range) = {
    val border = argTakeWhile(p)
    if (border == start) (newEmptyRange(start), this)
    else {
      val x = (border - step).toInt
      if (x == last) (this, newEmptyRange(last))
      else (new Range.Inclusive(start, x, step), new Range.Inclusive(x+step, last, step))
    }
  }

  /** Creates a pair of new ranges, first consisting of elements before `n`, and the second
   *  of elements after `n`.
   *
   *  $doesNotUseBuilders
   */
  final override def splitAt(n: Int) = (take(n), drop(n))

  /** Creates a new range consisting of the last `n` elements of the range.
   *
   *  $doesNotUseBuilders
   */
  final override def takeRight(n: Int): Range = {
    if (n <= 0) newEmptyRange(start)
    else if (numRangeElements >= 0) drop(numRangeElements - n)
    else {
    // Need to handle over-full range separately
      val y = last
      val x = y - step.toLong*(n-1)
      if ((step > 0 && x < start) || (step < 0 && x > start)) this
      else new Range.Inclusive(x.toInt, y, step)
    }
  }

  /** Creates a new range consisting of the initial `length - n` elements of the range.
   *
   *  $doesNotUseBuilders
   */
  final override def dropRight(n: Int): Range = {
    if (n <= 0) this
    else if (numRangeElements >= 0) take(numRangeElements - n)
    else {
    // Need to handle over-full range separately
      val y = last - step.toInt*n
      if ((step > 0 && y < start) || (step < 0 && y > start)) newEmptyRange(start)
      else new Range.Inclusive(start, y.toInt, step)
    }
  }

  /** Returns the reverse of this range.
   *
   *  $doesNotUseBuilders
   */
  final override def reverse: Range =
    if (isEmpty) this
    else new Range.Inclusive(last, start, -step)

  /** Make range inclusive.
   */
  def inclusive =
    if (isInclusive) this
    else new Range.Inclusive(start, end, step)

  final def contains(x: Int) = {
    if (x==end && !isInclusive) false
    else if (step > 0) {
      if (x < start || x > end) false
      else (step == 1) || (((x - start) % step) == 0)
    }
    else {
      if (x < end || x > start) false
      else (step == -1) || (((x - start) % step) == 0)
    }
  }

  final override def sum[B >: Int](implicit num: Numeric[B]): Int = {
    if (num eq scala.math.Numeric.IntIsIntegral) {
      // this is normal integer range with usual addition. arithmetic series formula can be used
      if (isEmpty) 0
      else if (numRangeElements == 1) head
      else ((numRangeElements * (head.toLong + last)) / 2).toInt
    } else {
      // user provided custom Numeric, we cannot rely on arithmetic series formula
      if (isEmpty) num.toInt(num.zero)
      else {
        var acc = num.zero
        var i = head
        while (true) {
          acc = num.plus(acc, i)
          if (i == lastElement) return num.toInt(acc)
          i = i + step
        }
        0 // Never hit this--just to satisfy compiler since it doesn't know while(true) has type Nothing
      }
    }
  }

  override def toIterable = this

  override def toSeq = this

  override def equals(other: Any) = other match {
    case x: Range =>
      // Note: this must succeed for overfull ranges (length > Int.MaxValue)
      (x canEqual this) && {
        if (isEmpty) x.isEmpty                  // empty sequences are equal
        else                                    // this is non-empty...
          x.nonEmpty && start == x.start && {   // ...so other must contain something and have same start
            val l0 = last
            (l0 == x.last && (                    // And same end
              start == l0 || step == x.step       // And either the same step, or not take any steps
            ))
          }
      }
    case _ =>
      super.equals(other)
  }

  /* Note: hashCode can't be overridden without breaking Seq's equals contract. */

  override def toString = {
    val preposition = if (isInclusive) "to" else "until"
    val stepped = if (step == 1) "" else s" by $step"
    val prefix = if (isEmpty) "empty " else if (!isExact) "inexact " else ""
    s"${prefix}Range $start $preposition $end$stepped"
  }
}

/** A companion object for the `Range` class.
 */
object Range {
  /** Counts the number of range elements.
   *  @pre  step != 0
   *  If the size of the range exceeds Int.MaxValue, the
   *  result will be negative.
   */
  def count(start: Int, end: Int, step: Int, isInclusive: Boolean): Int = {
    if (step == 0)
      throw new IllegalArgumentException("step cannot be 0.")

    val isEmpty = (
      if (start == end) !isInclusive
      else if (start < end) step < 0
      else step > 0
    )
    if (isEmpty) 0
    else {
      // Counts with Longs so we can recognize too-large ranges.
      val gap: Long    = end.toLong - start.toLong
      val jumps: Long  = gap / step
      // Whether the size of this range is one larger than the
      // number of full-sized jumps.
      val hasStub      = isInclusive || (gap % step != 0)
      val result: Long = jumps + ( if (hasStub) 1 else 0 )

      if (result > scala.Int.MaxValue) -1
      else result.toInt
    }
  }
  def count(start: Int, end: Int, step: Int): Int =
    count(start, end, step, isInclusive = false)

  final class Inclusive(start: Int, end: Int, step: Int) extends Range(start, end, step) {
//    override def par = new ParRange(this)
    override def isInclusive = true
    override protected def copy(start: Int, end: Int, step: Int): Range = new Inclusive(start, end, step)
  }

  /** Make a range from `start` until `end` (exclusive) with given step value.
   * @note step != 0
   */
  def apply(start: Int, end: Int, step: Int): Range = new Range(start, end, step)

  /** Make a range from `start` until `end` (exclusive) with step value 1.
   */
  def apply(start: Int, end: Int): Range = new Range(start, end, 1)

  /** Make an inclusive range from `start` to `end` with given step value.
   * @note step != 0
   */
  def inclusive(start: Int, end: Int, step: Int): Range.Inclusive = new Inclusive(start, end, step)

  /** Make an inclusive range from `start` to `end` with step value 1.
   */
  def inclusive(start: Int, end: Int): Range.Inclusive = new Inclusive(start, end, 1)

  // BigInt and Long are straightforward generic ranges.
  object BigInt {
    def apply(start: BigInt, end: BigInt, step: BigInt) = NumericRange(start, end, step)
    def inclusive(start: BigInt, end: BigInt, step: BigInt) = NumericRange.inclusive(start, end, step)
  }

  object Long {
    def apply(start: Long, end: Long, step: Long) = NumericRange(start, end, step)
    def inclusive(start: Long, end: Long, step: Long) = NumericRange.inclusive(start, end, step)
  }

  // BigDecimal uses an alternative implementation of Numeric in which
  // it pretends to be Integral[T] instead of Fractional[T].  See Numeric for
  // details.  The intention is for it to throw an exception anytime
  // imprecision or surprises might result from anything, although this may
  // not yet be fully implemented.
  object BigDecimal {
    implicit val bigDecAsIntegral = scala.math.Numeric.BigDecimalAsIfIntegral

    def apply(start: BigDecimal, end: BigDecimal, step: BigDecimal) =
      NumericRange(start, end, step)
    def inclusive(start: BigDecimal, end: BigDecimal, step: BigDecimal) =
      NumericRange.inclusive(start, end, step)
  }

  // Double works by using a BigDecimal under the hood for precise
  // stepping, but mapping the sequence values back to doubles with
  // .doubleValue.  This constructs the BigDecimals by way of the
  // String constructor (valueOf) instead of the Double one, which
  // is necessary to keep 0.3d at 0.3 as opposed to
  // 0.299999999999999988897769753748434595763683319091796875 or so.
  object Double {
    implicit val bigDecAsIntegral = scala.math.Numeric.BigDecimalAsIfIntegral
    implicit val doubleAsIntegral = scala.math.Numeric.DoubleAsIfIntegral
    def toBD(x: Double): BigDecimal = scala.math.BigDecimal valueOf x

    @deprecated("use Range.BigDecimal instead", "2.12.6")
    def apply(start: Double, end: Double, step: Double) =
      BigDecimal(toBD(start), toBD(end), toBD(step)) mapRange (_.doubleValue)

    @deprecated("use Range.BigDecimal.inclusive instead", "2.12.6")
    def inclusive(start: Double, end: Double, step: Double) =
      BigDecimal.inclusive(toBD(start), toBD(end), toBD(step)) mapRange (_.doubleValue)
  }

  // As there is no appealing default step size for not-really-integral ranges,
  // we offer a partially constructed object.
  class Partial[T, U](private val f: T => U) extends AnyVal {
    def by(x: T): U = f(x)
    override def toString = "Range requires step"
  }

  // Illustrating genericity with Int Range, which should have the same behavior
  // as the original Range class.  However we leave the original Range
  // indefinitely, for performance and because the compiler seems to bootstrap
  // off it and won't do so with our parameterized version without modifications.
  object Int {
    def apply(start: Int, end: Int, step: Int) = NumericRange(start, end, step)
    def inclusive(start: Int, end: Int, step: Int) = NumericRange.inclusive(start, end, step)
  }
}

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
[0m2021.03.26 10:38:40 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
[0m2021.03.26 10:38:44 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:39:39 上午 scala.meta.internal.pc.CompilerAccess retryWithCleanCompiler
信息: compiler crashed due to an error in the Scala compiler, retrying with new compiler instance.
3月 26, 2021 10:39:39 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: null
java.lang.NullPointerException
	at scala.reflect.internal.Definitions$DefinitionsClass.isByNameParamType(Definitions.scala:417)
	at scala.reflect.internal.TreeInfo.isStableIdent(TreeInfo.scala:140)
	at scala.reflect.internal.TreeInfo.isStableIdentifier(TreeInfo.scala:113)
	at scala.reflect.internal.TreeInfo.isPath(TreeInfo.scala:102)
	at scala.reflect.internal.TreeInfo.admitsTypeSelection(TreeInfo.scala:158)
	at scala.tools.nsc.interactive.Global.stabilizedType(Global.scala:959)
	at scala.tools.nsc.interactive.Global.typedTreeAt(Global.scala:807)
	at scala.meta.internal.pc.SignatureHelpProvider.signatureHelp(SignatureHelpProvider.scala:23)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
[0m2021.03.26 10:39:42 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a );
         println( "Value of b: " + b );
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a );
         println( "Value of b: " + b );
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a );
         println( "Value of b: " + b );
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test3()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a );
         println( "Value of b: " + b );
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
[0m2021.03.26 10:39:46 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a );
         println( "Value of b: " + b );
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a );
         println( "Value of b: " + b );
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a );
         println( "Value of b: " + b );
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a );
         println( "Value of b: " + b );
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a );
         println( "Value of b: " + b );
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
[0m2021.03.26 10:39:57 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
         println( );
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
         println( );
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
         println( );
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
         println( );
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
         println( );
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
[0m2021.03.26 10:40:21 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
         println( );
      }


      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
         println( );
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
         println( );
      }


      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
         println( );
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
         println( );
      }


      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
         println( );
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
         println( );
      }


      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
         println( );
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
         println( );
      }


      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
         println( );
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
         println( );
      }


      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
         println( );
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
[0m2021.03.26 10:40:27 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
         println( );
      }


      for( a <- 1 to 3; b <- 1 to 3){
          for () {
              
          }
         println( "Value of a: " + a + ",Value of b: " + b );
         println( );
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:40:27 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:21: error: illegal start of simple pattern
          for () {
               ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:21: error: illegal start of simple pattern
          for () {
               ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$11(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.inParens(ScalametaParser.scala:695)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$10(ScalametaParser.scala:2275)
	at scala.util.Try$.apply(Try.scala:213)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2298)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
         println( );
      }


      for( a <- 1 to 3; b <- 1 to 3){
          for () {
              
          }
         println( "Value of a: " + a + ",Value of b: " + b );
         println( );
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:40:28 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:21: error: illegal start of simple pattern
          for () {
               ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:21: error: illegal start of simple pattern
          for () {
               ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$11(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.inParens(ScalametaParser.scala:695)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$10(ScalametaParser.scala:2275)
	at scala.util.Try$.apply(Try.scala:213)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2298)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
         println( );
      }


      for( a <- 1 to 3; b <- 1 to 3){
          for () {
              
          }
         println( "Value of a: " + a + ",Value of b: " + b );
         println( );
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:40:28 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:21: error: illegal start of simple pattern
          for () {
               ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:21: error: illegal start of simple pattern
          for () {
               ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$11(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.inParens(ScalametaParser.scala:695)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$10(ScalametaParser.scala:2275)
	at scala.util.Try$.apply(Try.scala:213)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2298)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
         println( );
      }


      for( a <- 1 to 3; b <- 1 to 3){
          for () {
              
          }
         println( "Value of a: " + a + ",Value of b: " + b );
         println( );
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:40:28 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:21: error: illegal start of simple pattern
          for () {
               ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:21: error: illegal start of simple pattern
          for () {
               ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$11(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.inParens(ScalametaParser.scala:695)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$10(ScalametaParser.scala:2275)
	at scala.util.Try$.apply(Try.scala:213)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2298)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
         println( );
      }


      for( a <- 1 to 3; b <- 1 to 3){
          for () {
              
          }
         println( "Value of a: " + a + ",Value of b: " + b );
         println( );
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:40:28 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:21: error: illegal start of simple pattern
          for () {
               ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:21: error: illegal start of simple pattern
          for () {
               ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$11(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.inParens(ScalametaParser.scala:695)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$10(ScalametaParser.scala:2275)
	at scala.util.Try$.apply(Try.scala:213)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2298)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
         println( );
      }


      for( a <- 1 to 3; b <- 1 to 3){
          for () {
              
          }
         println( "Value of a: " + a + ",Value of b: " + b );
         println( );
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:40:29 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:21: error: illegal start of simple pattern
          for () {
               ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:21: error: illegal start of simple pattern
          for () {
               ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$11(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.inParens(ScalametaParser.scala:695)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$10(ScalametaParser.scala:2275)
	at scala.util.Try$.apply(Try.scala:213)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2298)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
         println( );
      }


      for( a <- 1 to 3; b <- 1 to 3){
          for () {
              
          }
         println( "Value of a: " + a + ",Value of b: " + b );
         println( );
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:40:29 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:21: error: illegal start of simple pattern
          for () {
               ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:21: error: illegal start of simple pattern
          for () {
               ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$11(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.inParens(ScalametaParser.scala:695)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$10(ScalametaParser.scala:2275)
	at scala.util.Try$.apply(Try.scala:213)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2298)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
         println( );
      }


      for( a <- 1 to 3; b <- 1 to 3){
          for () {
              
          }
         println( "Value of a: " + a + ",Value of b: " + b );
         println( );
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:40:29 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:21: error: illegal start of simple pattern
          for () {
               ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:21: error: illegal start of simple pattern
          for () {
               ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$11(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.inParens(ScalametaParser.scala:695)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$10(ScalametaParser.scala:2275)
	at scala.util.Try$.apply(Try.scala:213)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2298)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

[0m2021.03.26 10:40:30 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
         println( );
      }


      for( a <- 1 to 3; b <- 1 to 3){
          for () {
         println( "Value of a: " + a + ",Value of b: " + b );

          }
         println( );
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:40:30 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:21: error: illegal start of simple pattern
          for () {
               ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:21: error: illegal start of simple pattern
          for () {
               ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$11(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.inParens(ScalametaParser.scala:695)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$10(ScalametaParser.scala:2275)
	at scala.util.Try$.apply(Try.scala:213)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2298)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
         println( );
      }


      for( a <- 1 to 3; b <- 1 to 3){
          for () {
         println( "Value of a: " + a + ",Value of b: " + b );

          }
         println( );
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:40:31 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:21: error: illegal start of simple pattern
          for () {
               ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:21: error: illegal start of simple pattern
          for () {
               ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$11(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.inParens(ScalametaParser.scala:695)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$10(ScalametaParser.scala:2275)
	at scala.util.Try$.apply(Try.scala:213)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2298)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
         println( );
      }


      for( a <- 1 to 3; b <- 1 to 3){
          for () {
         println( "Value of a: " + a + ",Value of b: " + b );

          }
         println( );
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:40:31 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:21: error: illegal start of simple pattern
          for () {
               ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:21: error: illegal start of simple pattern
          for () {
               ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$11(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.inParens(ScalametaParser.scala:695)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$10(ScalametaParser.scala:2275)
	at scala.util.Try$.apply(Try.scala:213)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2298)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
         println( );
      }


      for( a <- 1 to 3; b <- 1 to 3){
          for () {
         println( "Value of a: " + a + ",Value of b: " + b );

          }
         println( );
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:40:31 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:21: error: illegal start of simple pattern
          for () {
               ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:21: error: illegal start of simple pattern
          for () {
               ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$11(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.inParens(ScalametaParser.scala:695)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$10(ScalametaParser.scala:2275)
	at scala.util.Try$.apply(Try.scala:213)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2298)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
         println( );
      }


      for( a <- 1 to 3; b <- 1 to 3){
          for () {
         println( "Value of a: " + a + ",Value of b: " + b );

          }
         println( );
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:40:31 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:21: error: illegal start of simple pattern
          for () {
               ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:21: error: illegal start of simple pattern
          for () {
               ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$11(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.inParens(ScalametaParser.scala:695)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$10(ScalametaParser.scala:2275)
	at scala.util.Try$.apply(Try.scala:213)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2298)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
         println( );
      }


      for( a <- 1 to 3; b <- 1 to 3){
          for () {
         println( "Value of a: " + a + ",Value of b: " + b );

          }
         println( );
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
[0m2021.03.26 10:40:32 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
3月 26, 2021 10:40:32 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:21: error: illegal start of simple pattern
          for () {
               ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:21: error: illegal start of simple pattern
          for () {
               ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$11(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.inParens(ScalametaParser.scala:695)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$10(ScalametaParser.scala:2275)
	at scala.util.Try$.apply(Try.scala:213)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2298)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3; b <- 1 to 3){
          for () {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:40:32 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:20: error: illegal start of simple pattern
          for () {
               ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:20: error: illegal start of simple pattern
          for () {
               ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$11(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.inParens(ScalametaParser.scala:695)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$10(ScalametaParser.scala:2275)
	at scala.util.Try$.apply(Try.scala:213)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2298)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3; b <- 1 to 3){
          for () {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:40:35 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:20: error: illegal start of simple pattern
          for () {
               ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:20: error: illegal start of simple pattern
          for () {
               ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$11(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.inParens(ScalametaParser.scala:695)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$10(ScalametaParser.scala:2275)
	at scala.util.Try$.apply(Try.scala:213)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2298)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3; b <- 1 to 3){
          for () {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:40:37 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:20: error: illegal start of simple pattern
          for () {
               ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:20: error: illegal start of simple pattern
          for () {
               ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$11(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.inParens(ScalametaParser.scala:695)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$10(ScalametaParser.scala:2275)
	at scala.util.Try$.apply(Try.scala:213)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2298)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3; b <- 1 to 3){
          for () {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:40:37 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:20: error: illegal start of simple pattern
          for () {
               ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:20: error: illegal start of simple pattern
          for () {
               ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$11(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.inParens(ScalametaParser.scala:695)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$10(ScalametaParser.scala:2275)
	at scala.util.Try$.apply(Try.scala:213)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2298)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3; b <- 1 to 3){
          for () {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:40:37 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:20: error: illegal start of simple pattern
          for () {
               ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:20: error: illegal start of simple pattern
          for () {
               ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$11(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.inParens(ScalametaParser.scala:695)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$10(ScalametaParser.scala:2275)
	at scala.util.Try$.apply(Try.scala:213)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2298)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3; b <- 1 to 3){
          for () {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:40:38 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:20: error: illegal start of simple pattern
          for () {
               ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:20: error: illegal start of simple pattern
          for () {
               ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$11(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.inParens(ScalametaParser.scala:695)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$10(ScalametaParser.scala:2275)
	at scala.util.Try$.apply(Try.scala:213)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2298)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3; b <- 1 to 3){
          for () {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:40:38 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:20: error: illegal start of simple pattern
          for () {
               ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:20: error: illegal start of simple pattern
          for () {
               ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$11(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.inParens(ScalametaParser.scala:695)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$10(ScalametaParser.scala:2275)
	at scala.util.Try$.apply(Try.scala:213)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2298)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3; b <- 1 to 3){
          for () {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:40:38 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:20: error: illegal start of simple pattern
          for () {
               ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:20: error: illegal start of simple pattern
          for () {
               ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$11(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.inParens(ScalametaParser.scala:695)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$10(ScalametaParser.scala:2275)
	at scala.util.Try$.apply(Try.scala:213)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2298)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

[0m2021.03.26 10:40:38 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3; ){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:40:38 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:19: error: illegal start of simple pattern
      for( a <- 1 to 3; ){
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:19: error: illegal start of simple pattern
      for( a <- 1 to 3; ){
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3068)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$11(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.inParens(ScalametaParser.scala:695)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$10(ScalametaParser.scala:2275)
	at scala.util.Try$.apply(Try.scala:213)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3; ){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:40:39 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:19: error: illegal start of simple pattern
      for( a <- 1 to 3; ){
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:19: error: illegal start of simple pattern
      for( a <- 1 to 3; ){
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3068)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$11(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.inParens(ScalametaParser.scala:695)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$10(ScalametaParser.scala:2275)
	at scala.util.Try$.apply(Try.scala:213)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3; ){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:40:39 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:19: error: illegal start of simple pattern
      for( a <- 1 to 3; ){
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:19: error: illegal start of simple pattern
      for( a <- 1 to 3; ){
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3068)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$11(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.inParens(ScalametaParser.scala:695)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$10(ScalametaParser.scala:2275)
	at scala.util.Try$.apply(Try.scala:213)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3; ){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:40:40 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:19: error: illegal start of simple pattern
      for( a <- 1 to 3; ){
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:19: error: illegal start of simple pattern
      for( a <- 1 to 3; ){
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3068)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$11(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.inParens(ScalametaParser.scala:695)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$10(ScalametaParser.scala:2275)
	at scala.util.Try$.apply(Try.scala:213)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4787)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4944)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

[0m2021.03.26 10:40:40 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
       var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
[0m2021.03.26 10:41:24 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
[0m2021.03.26 10:45:53 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
[0m2021.03.26 10:46:16 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
[0m2021.03.26 10:46:18 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
[0m2021.03.26 10:46:40 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for(){

       }yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:46:40 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for(){
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for(){
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$11(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.inParens(ScalametaParser.scala:695)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$10(ScalametaParser.scala:2275)
	at scala.util.Try$.apply(Try.scala:213)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for(){

       }yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:46:44 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for(){
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for(){
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$11(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.inParens(ScalametaParser.scala:695)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$10(ScalametaParser.scala:2275)
	at scala.util.Try$.apply(Try.scala:213)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for(){

       }yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:46:45 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for(){
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for(){
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$11(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.inParens(ScalametaParser.scala:695)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$10(ScalametaParser.scala:2275)
	at scala.util.Try$.apply(Try.scala:213)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for(){

       }yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:46:46 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for(){
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for(){
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$11(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.inParens(ScalametaParser.scala:695)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$10(ScalametaParser.scala:2275)
	at scala.util.Try$.apply(Try.scala:213)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for(){

       }yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:46:46 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for(){
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for(){
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$11(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.inParens(ScalametaParser.scala:695)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$10(ScalametaParser.scala:2275)
	at scala.util.Try$.apply(Try.scala:213)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for(){

       }yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:46:47 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for(){
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for(){
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$11(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.inParens(ScalametaParser.scala:695)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$10(ScalametaParser.scala:2275)
	at scala.util.Try$.apply(Try.scala:213)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for(){

       }yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:46:47 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for(){
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for(){
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$11(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.inParens(ScalametaParser.scala:695)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$10(ScalametaParser.scala:2275)
	at scala.util.Try$.apply(Try.scala:213)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for(){

       }yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:46:48 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for(){
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for(){
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$11(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.inParens(ScalametaParser.scala:695)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$10(ScalametaParser.scala:2275)
	at scala.util.Try$.apply(Try.scala:213)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for(){

       }yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:46:50 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for(){
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for(){
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$11(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.inParens(ScalametaParser.scala:695)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$10(ScalametaParser.scala:2275)
	at scala.util.Try$.apply(Try.scala:213)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for(){

       }yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:46:51 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for(){
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for(){
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$11(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.inParens(ScalametaParser.scala:695)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$10(ScalametaParser.scala:2275)
	at scala.util.Try$.apply(Try.scala:213)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for(){

       }yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:46:52 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for(){
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for(){
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$11(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.inParens(ScalametaParser.scala:695)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$10(ScalametaParser.scala:2275)
	at scala.util.Try$.apply(Try.scala:213)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for(){

       }yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:46:53 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for(){
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for(){
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$11(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.inParens(ScalametaParser.scala:695)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$10(ScalametaParser.scala:2275)
	at scala.util.Try$.apply(Try.scala:213)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for(){

       }yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:46:54 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for(){
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for(){
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$11(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.inParens(ScalametaParser.scala:695)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$10(ScalametaParser.scala:2275)
	at scala.util.Try$.apply(Try.scala:213)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for(){

       }yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:46:54 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for(){
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for(){
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$11(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.inParens(ScalametaParser.scala:695)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$10(ScalametaParser.scala:2275)
	at scala.util.Try$.apply(Try.scala:213)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for(){

       }yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:06 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for(){
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for(){
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$11(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.inParens(ScalametaParser.scala:695)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$10(ScalametaParser.scala:2275)
	at scala.util.Try$.apply(Try.scala:213)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for(){

       }yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:07 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for(){
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for(){
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$11(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.inParens(ScalametaParser.scala:695)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$10(ScalametaParser.scala:2275)
	at scala.util.Try$.apply(Try.scala:213)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for(){

       }yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:09 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for(){
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for(){
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$11(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.inParens(ScalametaParser.scala:695)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$10(ScalametaParser.scala:2275)
	at scala.util.Try$.apply(Try.scala:213)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for(){

       }yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:10 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for(){
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for(){
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$11(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.inParens(ScalametaParser.scala:695)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$10(ScalametaParser.scala:2275)
	at scala.util.Try$.apply(Try.scala:213)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for(){

       }yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:10 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for(){
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for(){
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$11(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.inParens(ScalametaParser.scala:695)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$10(ScalametaParser.scala:2275)
	at scala.util.Try$.apply(Try.scala:213)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2275)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

[0m2021.03.26 10:47:11 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{}yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:11 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$9(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{}yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:11 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$9(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{}yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:15 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$9(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{}yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:15 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$9(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{}yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:16 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$9(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{}yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:16 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$9(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{}yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:17 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$9(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{}yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:17 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$9(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{}yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:18 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$9(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{}yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:19 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$9(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{}yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:20 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$9(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{}yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:21 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$9(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{}yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:21 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$9(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{}yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:21 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$9(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{}yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:22 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$9(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{}yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:23 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$9(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{}yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:24 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$9(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{}yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:27 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$9(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{}yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:29 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$9(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{}yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:30 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$9(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{}yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:31 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$9(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{}yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:32 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$9(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{}yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:33 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$9(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{}yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:33 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$9(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{}yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:36 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$9(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{}yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:38 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$9(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{}yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:39 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$9(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{}yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:40 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:14: error: illegal start of simple pattern
       var result = for{}yield
                        ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3305)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3281)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3379)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3312)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3311)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3260)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3258)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3226)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3225)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern1$1(ScalametaParser.scala:3190)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern1$(ScalametaParser.scala:3189)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern1(ScalametaParser.scala:3392)
	at scala.meta.internal.parsers.ScalametaParser.generator(ScalametaParser.scala:3102)
	at scala.meta.internal.parsers.ScalametaParser.enumerator(ScalametaParser.scala:3080)
	at scala.meta.internal.parsers.ScalametaParser.enumerators(ScalametaParser.scala:3065)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$9(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2272)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

[0m2021.03.26 10:47:40 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:40 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:16: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:16: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2820)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2296)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:42 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:16: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:16: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2820)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2296)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:48 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:16: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:16: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2820)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2296)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:48 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:16: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:16: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2820)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2296)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

[0m2021.03.26 10:47:48 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield

        
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:48 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2820)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2296)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield

        
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:49 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2820)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2296)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield

        
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:50 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2820)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2296)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield

        
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:51 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2820)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2296)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield

        
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:52 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2820)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2296)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield

        
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:52 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2820)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2296)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield

        
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:53 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2820)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2296)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield

        
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:53 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2820)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2296)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield

        
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:54 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2820)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2296)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield

        
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:55 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2820)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2296)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield

        
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:55 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2820)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2296)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield

        
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:55 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2820)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2296)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield

        
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:56 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2820)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2296)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield

        
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:56 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2820)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2296)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield

        
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:57 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2820)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2296)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield

        
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:58 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2820)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2296)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield

        
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:59 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2820)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2296)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield

        
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:47:59 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2820)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2296)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield

        
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:48:00 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2820)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2296)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield

        
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:48:01 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2820)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2296)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield

        
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:48:02 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2820)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2296)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield

        
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:48:04 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2820)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2296)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield

        
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:48:04 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2820)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2296)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield

        
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:48:06 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2820)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2296)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield

        
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:48:09 上午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fnode%2F031%2Fscala-learn.scala:18: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2820)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2296)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2120)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4007)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:3993)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3959)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4913)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4940)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3002)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:2995)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:2983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:2986)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2979)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2802)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:809)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:819)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2772)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2770)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2754)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2734)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2311)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2197)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2092)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4224)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4178)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4107)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3963)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3948)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4868)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4862)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4878)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4858)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:712)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4707)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4715)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4700)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4439)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4431)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4315)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4297)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4828)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4816)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4806)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4815)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5029)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:4995)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:4978)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:800)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:816)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:4977)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:4983)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5040)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:52)

[0m2021.03.26 10:48:09 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield

        for (a<-result) {
            println(a)
        }
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield

        for (a<-result) {
            println(a)
        }
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:58:08 上午 org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
警告: Unmatched cancel notification for request id 2042
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield

        for (a<-result) {
            println(a)
        }
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 10:58:16 上午 org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint notify
信息: Unsupported notification method: $/setTraceNotification
3月 26, 2021 10:58:17 上午 org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint notify
信息: Unsupported notification method: $/setTraceNotification
[0m2021.03.26 10:58:17 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield

        for (a<-result) {
            println(a)
        }
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield

        for (a<-result) {
            println(a)
        }
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield

        for (a<-result) {
            println(a)
        }
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
3月 26, 2021 11:14:06 上午 org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint notify
信息: Unsupported notification method: $/setTraceNotification
3月 26, 2021 11:14:08 上午 org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint notify
信息: Unsupported notification method: $/setTraceNotification
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield

        for (a<-result) {
            println(a)
        }
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield

        for (a<-result) {
            println(a)
        }
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield

        for (a<-result) {
            println(a)
        }
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
[0m2021.03.26 12:11:52 INFO  shutting down Metals[0m
[0m2021.03.28 20:35:03 INFO  Started: Metals version 0.10.0 in workspace '/Users/zhenhuli/private/zhenhuli-blog' for client vscode 1.54.3.[0m
[0m2021.03.28 20:35:05 INFO  time: initialize in 2.15s[0m
[0m2021.03.28 20:35:05 WARN  Build server is not auto-connectable.[0m
[0m2021.03.28 20:35:05 WARN  no build tool detected in workspace '/Users/zhenhuli/private/zhenhuli-blog'. The most common cause for this problem is that the editor was opened in the wrong working directory, for example if you use sbt then the workspace directory should contain build.sbt. [0m
[0m2021.03.28 20:35:05 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
[0m2021.03.28 20:35:09 INFO  no build target: using presentation compiler with only scala-library: 2.12.13[0m
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield

        for (a<-result) {
            println(a)
        }
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield

        for (a<-result) {
            println(a)
        }
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield

        for (a<-result) {
            println(a)
        }
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield

        for (a<-result) {
            println(a)
        }
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
[0m2021.03.28 20:35:12 INFO  time: code lens generation in 6.25s[0m
[0m2021.03.29 09:35:13 INFO  shutting down Metals[0m
[0m2021.04.03 16:40:14 INFO  Started: Metals version 0.10.0 in workspace '/Users/zhenhuli/private/zhenhuli-blog' for client vscode 1.55.0.[0m
[0m2021.04.03 16:40:16 INFO  time: initialize in 2.71s[0m
[0m2021.04.03 16:40:16 WARN  Build server is not auto-connectable.[0m
[0m2021.04.03 16:40:16 WARN  no build tool detected in workspace '/Users/zhenhuli/private/zhenhuli-blog'. The most common cause for this problem is that the editor was opened in the wrong working directory, for example if you use sbt then the workspace directory should contain build.sbt. [0m
[0m2021.04.03 16:40:16 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
[0m2021.04.03 16:40:21 INFO  no build target: using presentation compiler with only scala-library: 2.12.13[0m
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield

        for (a<-result) {
            println(a)
        }
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield

        for (a<-result) {
            println(a)
        }
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield

        for (a<-result) {
            println(a)
        }
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
[0m2021.04.03 17:46:56 INFO  shutting down Metals[0m
[0m2021.04.04 14:30:03 INFO  Started: Metals version 0.10.0 in workspace '/Users/zhenhuli/private/zhenhuli-blog' for client vscode 1.55.0.[0m
[0m2021.04.04 14:30:05 INFO  time: initialize in 1.95s[0m
[0m2021.04.04 14:30:05 WARN  Build server is not auto-connectable.[0m
[0m2021.04.04 14:30:05 WARN  no build tool detected in workspace '/Users/zhenhuli/private/zhenhuli-blog'. The most common cause for this problem is that the editor was opened in the wrong working directory, for example if you use sbt then the workspace directory should contain build.sbt. [0m
4月 04, 2021 2:30:05 下午 org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
严重: Internal error: java.util.NoSuchElementException: BatchedFunction
java.util.concurrent.CompletionException: java.util.NoSuchElementException: BatchedFunction
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:331)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:346)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:704)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:506)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2152)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:64)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.util.NoSuchElementException: BatchedFunction
	at scala.meta.internal.metals.BatchedFunction.<init>(BatchedFunction.scala:59)
	at scala.meta.internal.metals.MetalsLanguageServer.<init>(MetalsLanguageServer.scala:186)
	at scala.meta.metals.Main$.main(Main.scala:51)
	at scala.meta.metals.Main.main(Main.scala)

[0m2021.04.04 14:30:09 INFO  no build target: using presentation compiler with only scala-library: 2.12.13[0m
/*
 * Scala (https://www.scala-lang.org)
 *
 * Copyright EPFL and Lightbend, Inc.
 *
 * Licensed under Apache License 2.0
 * (http://www.apache.org/licenses/LICENSE-2.0).
 *
 * See the NOTICE file distributed with this work for
 * additional information regarding copyright ownership.
 */

package scala
package collection.immutable

import scala.collection.parallel.immutable.ParRange

/** The `Range` class represents integer values in range
 *  ''[start;end)'' with non-zero step value `step`.
 *  It's a special case of an indexed sequence.
 *  For example:
 *
 *  {{{
 *     val r1 = 0 until 10
 *     val r2 = r1.start until r1.end by r1.step + 1
 *     println(r2.length) // = 5
 *  }}}
 *
 *  Ranges that contain more than `Int.MaxValue` elements can be created, but
 *  these overfull ranges have only limited capabilities.  Any method that
 *  could require a collection of over `Int.MaxValue` length to be created, or
 *  could be asked to index beyond `Int.MaxValue` elements will throw an
 *  exception.  Overfull ranges can safely be reduced in size by changing
 *  the step size (e.g. `by 3`) or taking/dropping elements.  `contains`,
 *  `equals`, and access to the ends of the range (`head`, `last`, `tail`,
 *  `init`) are also permitted on overfull ranges.
 *
 *  @param start      the start of this range.
 *  @param end        the end of the range.  For exclusive ranges, e.g.
 *                    `Range(0,3)` or `(0 until 3)`, this is one
 *                    step past the last one in the range.  For inclusive
 *                    ranges, e.g. `Range.inclusive(0,3)` or `(0 to 3)`,
 *                    it may be in the range if it is not skipped by the step size.
 *                    To find the last element inside a non-empty range,
                      use `last` instead.
 *  @param step       the step for the range.
 *
 *  @author Martin Odersky
 *  @author Paul Phillips
 *  @since   2.5
 *  @see [[http://docs.scala-lang.org/overviews/collections/concrete-immutable-collection-classes.html#ranges "Scala's Collection Library overview"]]
 *  section on `Ranges` for more information.
 *
 *  @define coll range
 *  @define mayNotTerminateInf
 *  @define willNotTerminateInf
 *  @define doesNotUseBuilders
 *    '''Note:''' this method does not use builders to construct a new range,
 *         and its complexity is O(1).
 */
@SerialVersionUID(7618862778670199309L)
sealed class Range(val start: Int, val end: Int, val step: Int)
extends scala.collection.AbstractSeq[Int]
   with IndexedSeq[Int]
   with scala.collection.CustomParallelizable[Int, ParRange]
   with Serializable
{
  override def par = new ParRange(this)

  private def gap           = end.toLong - start.toLong
  private def isExact       = gap % step == 0
  private def hasStub       = isInclusive || !isExact
  private def longLength    = gap / step + ( if (hasStub) 1 else 0 )

  // Check cannot be evaluated eagerly because we have a pattern where
  // ranges are constructed like: "x to y by z" The "x to y" piece
  // should not trigger an exception. So the calculation is delayed,
  // which means it will not fail fast for those cases where failing was
  // correct.
  override final val isEmpty = (
       (start > end && step > 0)
    || (start < end && step < 0)
    || (start == end && !isInclusive)
  )

  private val numRangeElements: Int = {
    if (step == 0) throw new IllegalArgumentException("step cannot be 0.")
    else if (isEmpty) 0
    else {
      val len = longLength
      if (len > scala.Int.MaxValue) -1
      else len.toInt
    }
  }

  // This field has a sensible value only for non-empty ranges
  private val lastElement = step match {
    case 1  => if (isInclusive) end else end-1
    case -1 => if (isInclusive) end else end+1
    case _  =>
      val remainder = (gap % step).toInt
      if (remainder != 0) end - remainder
      else if (isInclusive) end
      else end - step
  }

  /** The last element of this range.  This method will return the correct value
   *  even if there are too many elements to iterate over.
   */
  override def last = if (isEmpty) Nil.last else lastElement
  override def head = if (isEmpty) Nil.head else start

  override def min[A1 >: Int](implicit ord: Ordering[A1]): Int =
    if (ord eq Ordering.Int) {
      if (step > 0) head
      else last
    } else super.min(ord)

  override def max[A1 >: Int](implicit ord: Ordering[A1]): Int =
    if (ord eq Ordering.Int) {
      if (step > 0) last
      else head
    } else super.max(ord)

  protected def copy(start: Int, end: Int, step: Int): Range = new Range(start, end, step)

  /** Create a new range with the `start` and `end` values of this range and
   *  a new `step`.
   *
   *  @return a new range with a different step
   */
  def by(step: Int): Range = copy(start, end, step)

  def isInclusive = false

  override def size = length
  override def length = if (numRangeElements < 0) fail() else numRangeElements

  private def description = "%d %s %d by %s".format(start, if (isInclusive) "to" else "until", end, step)
  private def fail() = throw new IllegalArgumentException(description + ": seqs cannot contain more than Int.MaxValue elements.")
  private def validateMaxLength() {
    if (numRangeElements < 0)
      fail()
  }

  final def apply(idx: Int): Int = {
    validateMaxLength()
    if (idx < 0 || idx >= numRangeElements) throw new IndexOutOfBoundsException(idx.toString)
    else start + (step * idx)
  }

  @inline final override def foreach[@specialized(Unit) U](f: Int => U) {
    // Implementation chosen on the basis of favorable microbenchmarks
    // Note--initialization catches step == 0 so we don't need to here
    if (!isEmpty) {
      var i = start
      while (true) {
        f(i)
        if (i == lastElement) return
        i += step
      }
    }
  }

  /** Creates a new range containing the first `n` elements of this range.
   *
   *  $doesNotUseBuilders
   *
   *  @param n  the number of elements to take.
   *  @return   a new range consisting of `n` first elements.
   */
  final override def take(n: Int): Range = (
    if (n <= 0 || isEmpty) newEmptyRange(start)
    else if (n >= numRangeElements && numRangeElements >= 0) this
    else {
      // May have more than Int.MaxValue elements in range (numRangeElements < 0)
      // but the logic is the same either way: take the first n
      new Range.Inclusive(start, locationAfterN(n - 1), step)
    }
  )

  /** Creates a new range containing all the elements of this range except the first `n` elements.
   *
   *  $doesNotUseBuilders
   *
   *  @param n  the number of elements to drop.
   *  @return   a new range consisting of all the elements of this range except `n` first elements.
   */
  final override def drop(n: Int): Range = (
    if (n <= 0 || isEmpty) this
    else if (n >= numRangeElements && numRangeElements >= 0) newEmptyRange(end)
    else {
      // May have more than Int.MaxValue elements (numRangeElements < 0)
      // but the logic is the same either way: go forwards n steps, keep the rest
      copy(locationAfterN(n), end, step)
    }
  )

  /** Creates a new range containing the elements starting at `from` up to but not including `until`.
   *
   *  $doesNotUseBuilders
   *
   *  @param from  the element at which to start
   *  @param until  the element at which to end (not included in the range)
   *  @return   a new range consisting of a contiguous interval of values in the old range
   */
  override def slice(from: Int, until: Int): Range =
    if (from <= 0) take(until)
    else if (until >= numRangeElements && numRangeElements >= 0) drop(from)
    else {
      val fromValue = locationAfterN(from)
      if (from >= until) newEmptyRange(fromValue)
      else new Range.Inclusive(fromValue, locationAfterN(until-1), step)
    }

  /** Creates a new range containing all the elements of this range except the last one.
   *
   *  $doesNotUseBuilders
   *
   *  @return  a new range consisting of all the elements of this range except the last one.
   */
  final override def init: Range = {
    if (isEmpty)
      Nil.init

    dropRight(1)
  }

  /** Creates a new range containing all the elements of this range except the first one.
   *
   *  $doesNotUseBuilders
   *
   *  @return  a new range consisting of all the elements of this range except the first one.
   */
  final override def tail: Range = {
    if (isEmpty)
      Nil.tail

    drop(1)
  }

  // Advance from the start while we meet the given test
  private def argTakeWhile(p: Int => Boolean): Long = {
    if (isEmpty) start
    else {
      var current = start
      val stop = last
      while (current != stop && p(current)) current += step
      if (current != stop || !p(current)) current
      else current.toLong + step
    }
  }
  // Methods like apply throw exceptions on invalid n, but methods like take/drop
  // are forgiving: therefore the checks are with the methods.
  private def locationAfterN(n: Int) = start + (step * n)

  // When one drops everything.  Can't ever have unchecked operations
  // like "end + 1" or "end - 1" because ranges involving Int.{ MinValue, MaxValue }
  // will overflow.  This creates an exclusive range where start == end
  // based on the given value.
  private def newEmptyRange(value: Int) = new Range(value, value, step)

  final override def takeWhile(p: Int => Boolean): Range = {
    val stop = argTakeWhile(p)
    if (stop==start) newEmptyRange(start)
    else {
      val x = (stop - step).toInt
      if (x == last) this
      else new Range.Inclusive(start, x, step)
    }
  }
  final override def dropWhile(p: Int => Boolean): Range = {
    val stop = argTakeWhile(p)
    if (stop == start) this
    else {
      val x = (stop - step).toInt
      if (x == last) newEmptyRange(last)
      else new Range.Inclusive(x + step, last, step)
    }
  }
  final override def span(p: Int => Boolean): (Range, Range) = {
    val border = argTakeWhile(p)
    if (border == start) (newEmptyRange(start), this)
    else {
      val x = (border - step).toInt
      if (x == last) (this, newEmptyRange(last))
      else (new Range.Inclusive(start, x, step), new Range.Inclusive(x+step, last, step))
    }
  }

  /** Creates a pair of new ranges, first consisting of elements before `n`, and the second
   *  of elements after `n`.
   *
   *  $doesNotUseBuilders
   */
  final override def splitAt(n: Int) = (take(n), drop(n))

  /** Creates a new range consisting of the last `n` elements of the range.
   *
   *  $doesNotUseBuilders
   */
  final override def takeRight(n: Int): Range = {
    if (n <= 0) newEmptyRange(start)
    else if (numRangeElements >= 0) drop(numRangeElements - n)
    else {
    // Need to handle over-full range separately
      val y = last
      val x = y - step.toLong*(n-1)
      if ((step > 0 && x < start) || (step < 0 && x > start)) this
      else new Range.Inclusive(x.toInt, y, step)
    }
  }

  /** Creates a new range consisting of the initial `length - n` elements of the range.
   *
   *  $doesNotUseBuilders
   */
  final override def dropRight(n: Int): Range = {
    if (n <= 0) this
    else if (numRangeElements >= 0) take(numRangeElements - n)
    else {
    // Need to handle over-full range separately
      val y = last - step.toInt*n
      if ((step > 0 && y < start) || (step < 0 && y > start)) newEmptyRange(start)
      else new Range.Inclusive(start, y.toInt, step)
    }
  }

  /** Returns the reverse of this range.
   *
   *  $doesNotUseBuilders
   */
  final override def reverse: Range =
    if (isEmpty) this
    else new Range.Inclusive(last, start, -step)

  /** Make range inclusive.
   */
  def inclusive =
    if (isInclusive) this
    else new Range.Inclusive(start, end, step)

  final def contains(x: Int) = {
    if (x==end && !isInclusive) false
    else if (step > 0) {
      if (x < start || x > end) false
      else (step == 1) || (((x - start) % step) == 0)
    }
    else {
      if (x < end || x > start) false
      else (step == -1) || (((x - start) % step) == 0)
    }
  }

  final override def sum[B >: Int](implicit num: Numeric[B]): Int = {
    if (num eq scala.math.Numeric.IntIsIntegral) {
      // this is normal integer range with usual addition. arithmetic series formula can be used
      if (isEmpty) 0
      else if (numRangeElements == 1) head
      else ((numRangeElements * (head.toLong + last)) / 2).toInt
    } else {
      // user provided custom Numeric, we cannot rely on arithmetic series formula
      if (isEmpty) num.toInt(num.zero)
      else {
        var acc = num.zero
        var i = head
        while (true) {
          acc = num.plus(acc, i)
          if (i == lastElement) return num.toInt(acc)
          i = i + step
        }
        0 // Never hit this--just to satisfy compiler since it doesn't know while(true) has type Nothing
      }
    }
  }

  override def toIterable = this

  override def toSeq = this

  override def equals(other: Any) = other match {
    case x: Range =>
      // Note: this must succeed for overfull ranges (length > Int.MaxValue)
      (x canEqual this) && {
        if (isEmpty) x.isEmpty                  // empty sequences are equal
        else                                    // this is non-empty...
          x.nonEmpty && start == x.start && {   // ...so other must contain something and have same start
            val l0 = last
            (l0 == x.last && (                    // And same end
              start == l0 || step == x.step       // And either the same step, or not take any steps
            ))
          }
      }
    case _ =>
      super.equals(other)
  }

  /* Note: hashCode can't be overridden without breaking Seq's equals contract. */

  override def toString = {
    val preposition = if (isInclusive) "to" else "until"
    val stepped = if (step == 1) "" else s" by $step"
    val prefix = if (isEmpty) "empty " else if (!isExact) "inexact " else ""
    s"${prefix}Range $start $preposition $end$stepped"
  }
}

/** A companion object for the `Range` class.
 */
object Range {
  /** Counts the number of range elements.
   *  @pre  step != 0
   *  If the size of the range exceeds Int.MaxValue, the
   *  result will be negative.
   */
  def count(start: Int, end: Int, step: Int, isInclusive: Boolean): Int = {
    if (step == 0)
      throw new IllegalArgumentException("step cannot be 0.")

    val isEmpty = (
      if (start == end) !isInclusive
      else if (start < end) step < 0
      else step > 0
    )
    if (isEmpty) 0
    else {
      // Counts with Longs so we can recognize too-large ranges.
      val gap: Long    = end.toLong - start.toLong
      val jumps: Long  = gap / step
      // Whether the size of this range is one larger than the
      // number of full-sized jumps.
      val hasStub      = isInclusive || (gap % step != 0)
      val result: Long = jumps + ( if (hasStub) 1 else 0 )

      if (result > scala.Int.MaxValue) -1
      else result.toInt
    }
  }
  def count(start: Int, end: Int, step: Int): Int =
    count(start, end, step, isInclusive = false)

  final class Inclusive(start: Int, end: Int, step: Int) extends Range(start, end, step) {
//    override def par = new ParRange(this)
    override def isInclusive = true
    override protected def copy(start: Int, end: Int, step: Int): Range = new Inclusive(start, end, step)
  }

  /** Make a range from `start` until `end` (exclusive) with given step value.
   * @note step != 0
   */
  def apply(start: Int, end: Int, step: Int): Range = new Range(start, end, step)

  /** Make a range from `start` until `end` (exclusive) with step value 1.
   */
  def apply(start: Int, end: Int): Range = new Range(start, end, 1)

  /** Make an inclusive range from `start` to `end` with given step value.
   * @note step != 0
   */
  def inclusive(start: Int, end: Int, step: Int): Range.Inclusive = new Inclusive(start, end, step)

  /** Make an inclusive range from `start` to `end` with step value 1.
   */
  def inclusive(start: Int, end: Int): Range.Inclusive = new Inclusive(start, end, 1)

  // BigInt and Long are straightforward generic ranges.
  object BigInt {
    def apply(start: BigInt, end: BigInt, step: BigInt) = NumericRange(start, end, step)
    def inclusive(start: BigInt, end: BigInt, step: BigInt) = NumericRange.inclusive(start, end, step)
  }

  object Long {
    def apply(start: Long, end: Long, step: Long) = NumericRange(start, end, step)
    def inclusive(start: Long, end: Long, step: Long) = NumericRange.inclusive(start, end, step)
  }

  // BigDecimal uses an alternative implementation of Numeric in which
  // it pretends to be Integral[T] instead of Fractional[T].  See Numeric for
  // details.  The intention is for it to throw an exception anytime
  // imprecision or surprises might result from anything, although this may
  // not yet be fully implemented.
  object BigDecimal {
    implicit val bigDecAsIntegral = scala.math.Numeric.BigDecimalAsIfIntegral

    def apply(start: BigDecimal, end: BigDecimal, step: BigDecimal) =
      NumericRange(start, end, step)
    def inclusive(start: BigDecimal, end: BigDecimal, step: BigDecimal) =
      NumericRange.inclusive(start, end, step)
  }

  // Double works by using a BigDecimal under the hood for precise
  // stepping, but mapping the sequence values back to doubles with
  // .doubleValue.  This constructs the BigDecimals by way of the
  // String constructor (valueOf) instead of the Double one, which
  // is necessary to keep 0.3d at 0.3 as opposed to
  // 0.299999999999999988897769753748434595763683319091796875 or so.
  object Double {
    implicit val bigDecAsIntegral = scala.math.Numeric.BigDecimalAsIfIntegral
    implicit val doubleAsIntegral = scala.math.Numeric.DoubleAsIfIntegral
    def toBD(x: Double): BigDecimal = scala.math.BigDecimal valueOf x

    @deprecated("use Range.BigDecimal instead", "2.12.6")
    def apply(start: Double, end: Double, step: Double) =
      BigDecimal(toBD(start), toBD(end), toBD(step)) mapRange (_.doubleValue)

    @deprecated("use Range.BigDecimal.inclusive instead", "2.12.6")
    def inclusive(start: Double, end: Double, step: Double) =
      BigDecimal.inclusive(toBD(start), toBD(end), toBD(step)) mapRange (_.doubleValue)
  }

  // As there is no appealing default step size for not-really-integral ranges,
  // we offer a partially constructed object.
  class Partial[T, U](private val f: T => U) extends AnyVal {
    def by(x: T): U = f(x)
    override def toString = "Range requires step"
  }

  // Illustrating genericity with Int Range, which should have the same behavior
  // as the original Range class.  However we leave the original Range
  // indefinitely, for performance and because the compiler seems to bootstrap
  // off it and won't do so with our parameterized version without modifications.
  object Int {
    def apply(start: Int, end: Int, step: Int) = NumericRange(start, end, step)
    def inclusive(start: Int, end: Int, step: Int) = NumericRange.inclusive(start, end, step)
  }
}

[0m2021.04.04 14:30:12 INFO  time: code lens generation in 6.45s[0m
[0m2021.04.04 14:34:54 INFO  shutting down Metals[0m
[0m2021.04.06 14:46:52 INFO  Started: Metals version 0.10.0 in workspace '/Users/zhenhuli/private/zhenhuli-blog' for client vscode 1.55.0.[0m
[0m2021.04.06 14:46:54 INFO  time: initialize in 1.94s[0m
[0m2021.04.06 14:46:54 WARN  Build server is not auto-connectable.[0m
[0m2021.04.06 14:46:54 WARN  no build tool detected in workspace '/Users/zhenhuli/private/zhenhuli-blog'. The most common cause for this problem is that the editor was opened in the wrong working directory, for example if you use sbt then the workspace directory should contain build.sbt. [0m
[0m2021.04.06 14:46:54 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/leetcode/99999/test.scala[0m
4月 06, 2021 2:46:56 下午 org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
警告: Unmatched cancel notification for request id 4
4月 06, 2021 2:46:58 下午 org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
警告: Unmatched cancel notification for request id 8
[0m2021.04.06 14:46:59 INFO  no build target: using presentation compiler with only scala-library: 2.12.13[0m




[0m2021.04.06 14:47:00 INFO  time: code lens generation in 2.86s[0m
[0m2021.04.06 14:47:00 INFO  time: code lens generation in 5.51s[0m

4月 06, 2021 2:47:03 下午 org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
警告: Unmatched cancel notification for request id 12
[0m2021.04.06 14:52:37 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/node/031/scala-learn.scala[0m
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield

        for (a<-result) {
            println(a)
        }
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield

        for (a<-result) {
            println(a)
        }
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield

        for (a<-result) {
            println(a)
        }
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield

        for (a<-result) {
            println(a)
        }
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}


4月 06, 2021 2:54:27 下午 org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
警告: Unmatched cancel notification for request id 26
4月 06, 2021 2:57:35 下午 org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
警告: Unmatched cancel notification for request id 28
object HelloWorld {
   /* 这是我的第一个 Scala 程序
    * 以下程序将输出'Hello World!' 
    */
   def main(args: Array[String]) {
      println("Hello, world!\n\n") // 输出 Hello World
      test4()
   }

   def test5() {
       var a = 0;
       var array = List(1,2,3,4,5,6,7,8,9,10)

       var result = for{a<-array
            if a!=3;if a<8}yield

        for (a<-result) {
            println(a)
        }
   }

   def test4() {
        var a = 0;
      var b = 0;
      // for 循环
      for( a <- 1 to 3; b <- 1 to 3){
         println( "Value of a: " + a + ",Value of b: " + b );
      }


      for( a <- 1 to 3){
          for (b <- 1 to 3) {
         println( "Value of a: " + a + ",Value of b: " + b );
          }
      }
   }

   def test3() {
       var a = 0
       for (a <- 0 to 10) {
           println(a)
       }

       for (a <- 0 until 10) {
           println(a)
       }

       for (a <- 0 to 10 by 3) {
           println(a)
       }
   }

   def test() {
       var str : String = "zhenhuli"
       val stl : String = "zhenhuli"

       str = "1234"
   }

   def test2() {
        var x = 10;

      if( x < 20 ){
         println("x < 20");
      } else {
          println("x > 20")
      }
   }

}
[0m2021.04.06 14:57:47 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/leetcode/99999/test.scala[0m



4月 06, 2021 2:57:47 下午 org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
警告: Unmatched cancel notification for request id 35
4月 06, 2021 8:38:09 下午 org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint notify
信息: Unsupported notification method: $/setTraceNotification
[0m2021.04.06 22:09:43 INFO  shutting down Metals[0m
[0m2021.04.07 19:45:05 INFO  Started: Metals version 0.10.1 in workspace '/Users/zhenhuli/private/zhenhuli-blog' for client vscode 1.55.0.[0m
[0m2021.04.07 19:45:07 INFO  time: initialize in 1.51s[0m
[0m2021.04.07 19:45:07 WARN  Build server is not auto-connectable.[0m
[0m2021.04.07 19:45:07 WARN  no build tool detected in workspace '/Users/zhenhuli/private/zhenhuli-blog'. The most common cause for this problem is that the editor was opened in the wrong working directory, for example if you use sbt then the workspace directory should contain build.sbt. [0m
[0m2021.04.07 19:45:09 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/leetcode/99999/test.scala[0m
[0m2021.04.07 19:45:12 INFO  no build target: using presentation compiler with only scala-library: 2.12.13[0m
4月 07, 2021 7:45:12 下午 org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
警告: Unmatched cancel notification for request id 4
[0m2021.04.07 19:45:13 INFO  time: code lens generation in 3.95s[0m
[0m2021.04.07 19:46:51 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/leetcode/99999/test.scala[0m
4月 07, 2021 7:46:54 下午 org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
警告: Unmatched cancel notification for request id 8
4月 07, 2021 7:47:00 下午 org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
警告: Unmatched cancel notification for request id 12
[0m2021.04.07 19:47:04 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/leetcode/99999/test.scala[0m
[0m2021.04.07 19:47:05 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/leetcode/99999/test.scala[0m
[0m2021.04.07 19:47:08 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/leetcode/99999/test.scala[0m
4月 07, 2021 7:47:30 下午 org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
警告: Unmatched cancel notification for request id 42
4月 07, 2021 7:47:38 下午 org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
警告: Unmatched cancel notification for request id 48
[0m2021.04.07 19:48:12 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/leetcode/99999 copy/test.scala[0m
[0m2021.04.07 19:48:37 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/leetcode/104/test.scala[0m
4月 07, 2021 7:50:54 下午 org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
警告: Unmatched cancel notification for request id 60
4月 07, 2021 7:51:41 下午 org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint notify
信息: Unsupported notification method: $/setTraceNotification
[0m2021.04.07 19:57:13 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/leetcode/104/test.scala[0m
[0m2021.04.07 19:57:23 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/leetcode/104/test.scala[0m
4月 07, 2021 7:57:24 下午 org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
警告: Unmatched cancel notification for request id 110
4月 07, 2021 7:57:29 下午 org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
警告: Unmatched cancel notification for request id 123
[0m2021.04.07 19:57:32 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/leetcode/104/test.scala[0m
[0m2021.04.07 19:57:35 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/leetcode/104/test.scala[0m
[0m2021.04.07 19:57:48 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/leetcode/104/test.scala[0m
[0m2021.04.07 19:57:51 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/leetcode/104/test.scala[0m
4月 07, 2021 7:57:51 下午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:6: error: ; expected but class found
 * class TreeNode(_value: Int = 0, _left: TreeNode = null, _right: TreeNode = null) {
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:6: error: ; expected but class found
 * class TreeNode(_value: Int = 0, _left: TreeNode = null, _right: TreeNode = null) {
   ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser.syntaxErrorExpected(ScalametaParser.scala:852)
	at scala.meta.internal.parsers.ScalametaParser.accept(ScalametaParser.scala:858)
	at scala.meta.internal.parsers.ScalametaParser.acceptStatSep(ScalametaParser.scala:867)
	at scala.meta.internal.parsers.ScalametaParser.acceptStatSepOpt(ScalametaParser.scala:871)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4832)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4901)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4881)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4738)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4723)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4462)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4454)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4338)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4320)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4851)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4839)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4838)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5052)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:5018)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:5001)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:5000)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:5006)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5063)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:51)

4月 07, 2021 7:57:57 下午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:6: error: ; expected but class found
 * class TreeNode(_value: Int = 0, _left: TreeNode = null, _right: TreeNode = null) {
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:6: error: ; expected but class found
 * class TreeNode(_value: Int = 0, _left: TreeNode = null, _right: TreeNode = null) {
   ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser.syntaxErrorExpected(ScalametaParser.scala:852)
	at scala.meta.internal.parsers.ScalametaParser.accept(ScalametaParser.scala:858)
	at scala.meta.internal.parsers.ScalametaParser.acceptStatSep(ScalametaParser.scala:867)
	at scala.meta.internal.parsers.ScalametaParser.acceptStatSepOpt(ScalametaParser.scala:871)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4832)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4901)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4881)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4738)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4723)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4462)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4454)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4338)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4320)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4851)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4839)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4838)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5052)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:5018)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:5001)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:5000)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:5006)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5063)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:51)

4月 07, 2021 7:57:58 下午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:6: error: ; expected but class found
 * class TreeNode(_value: Int = 0, _left: TreeNode = null, _right: TreeNode = null) {
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:6: error: ; expected but class found
 * class TreeNode(_value: Int = 0, _left: TreeNode = null, _right: TreeNode = null) {
   ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser.syntaxErrorExpected(ScalametaParser.scala:852)
	at scala.meta.internal.parsers.ScalametaParser.accept(ScalametaParser.scala:858)
	at scala.meta.internal.parsers.ScalametaParser.acceptStatSep(ScalametaParser.scala:867)
	at scala.meta.internal.parsers.ScalametaParser.acceptStatSepOpt(ScalametaParser.scala:871)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4832)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4901)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4881)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4738)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4723)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4462)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4454)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4338)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4320)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4851)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4839)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4838)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5052)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:5018)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:5001)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:5000)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:5006)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5063)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:51)

4月 07, 2021 7:57:59 下午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:6: error: ; expected but class found
 * class TreeNode(_value: Int = 0, _left: TreeNode = null, _right: TreeNode = null) {
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:6: error: ; expected but class found
 * class TreeNode(_value: Int = 0, _left: TreeNode = null, _right: TreeNode = null) {
   ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser.syntaxErrorExpected(ScalametaParser.scala:852)
	at scala.meta.internal.parsers.ScalametaParser.accept(ScalametaParser.scala:858)
	at scala.meta.internal.parsers.ScalametaParser.acceptStatSep(ScalametaParser.scala:867)
	at scala.meta.internal.parsers.ScalametaParser.acceptStatSepOpt(ScalametaParser.scala:871)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4832)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4901)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4881)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4738)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4723)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4462)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4454)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4338)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4320)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4851)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4839)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4838)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5052)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:5018)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:5001)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:5000)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:5006)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5063)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:51)

4月 07, 2021 7:58:00 下午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:6: error: ; expected but class found
 * class TreeNode(_value: Int = 0, _left: TreeNode = null, _right: TreeNode = null) {
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:6: error: ; expected but class found
 * class TreeNode(_value: Int = 0, _left: TreeNode = null, _right: TreeNode = null) {
   ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser.syntaxErrorExpected(ScalametaParser.scala:852)
	at scala.meta.internal.parsers.ScalametaParser.accept(ScalametaParser.scala:858)
	at scala.meta.internal.parsers.ScalametaParser.acceptStatSep(ScalametaParser.scala:867)
	at scala.meta.internal.parsers.ScalametaParser.acceptStatSepOpt(ScalametaParser.scala:871)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4832)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4901)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4881)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4738)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4723)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4462)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4454)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4338)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4320)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4851)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4839)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4838)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5052)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:5018)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:5001)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:5000)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:5006)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5063)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:51)

4月 07, 2021 7:58:01 下午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:6: error: ; expected but class found
 * class TreeNode(_value: Int = 0, _left: TreeNode = null, _right: TreeNode = null) {
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:6: error: ; expected but class found
 * class TreeNode(_value: Int = 0, _left: TreeNode = null, _right: TreeNode = null) {
   ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser.syntaxErrorExpected(ScalametaParser.scala:852)
	at scala.meta.internal.parsers.ScalametaParser.accept(ScalametaParser.scala:858)
	at scala.meta.internal.parsers.ScalametaParser.acceptStatSep(ScalametaParser.scala:867)
	at scala.meta.internal.parsers.ScalametaParser.acceptStatSepOpt(ScalametaParser.scala:871)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4832)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4901)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4881)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4738)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4723)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4462)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4454)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4338)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4320)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4851)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4839)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4838)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5052)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:5018)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:5001)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:5000)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:5006)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5063)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:51)

4月 07, 2021 7:58:02 下午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:6: error: ; expected but class found
 * class TreeNode(_value: Int = 0, _left: TreeNode = null, _right: TreeNode = null) {
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:6: error: ; expected but class found
 * class TreeNode(_value: Int = 0, _left: TreeNode = null, _right: TreeNode = null) {
   ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser.syntaxErrorExpected(ScalametaParser.scala:852)
	at scala.meta.internal.parsers.ScalametaParser.accept(ScalametaParser.scala:858)
	at scala.meta.internal.parsers.ScalametaParser.acceptStatSep(ScalametaParser.scala:867)
	at scala.meta.internal.parsers.ScalametaParser.acceptStatSepOpt(ScalametaParser.scala:871)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4832)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4901)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4881)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4738)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4723)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4462)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4454)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4338)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4320)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4851)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4839)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4838)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5052)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:5018)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:5001)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:5000)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:5006)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5063)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:51)

[0m2021.04.07 19:58:02 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/leetcode/104/test.scala[0m
[0m2021.04.07 19:58:29 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/leetcode/104/test.scala[0m
[0m2021.04.07 19:58:35 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/leetcode/104/test.scala[0m
[0m2021.04.07 19:59:19 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/leetcode/104/test.scala[0m
[0m2021.04.07 19:59:36 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/leetcode/104/test.scala[0m
[0m2021.04.07 20:01:29 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/leetcode/104/test.scala[0m
[0m2021.04.07 20:01:30 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/leetcode/104/test.scala[0m
[0m2021.04.07 20:01:38 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/leetcode/104/test.scala[0m
[0m2021.04.07 20:01:44 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/leetcode/104/test.scala[0m
4月 07, 2021 8:01:44 下午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2837)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$16(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4810)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3022)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:3015)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:3000)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2996)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2819)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2109)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4247)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4201)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4130)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3983)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3968)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4891)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4885)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4901)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4881)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4738)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4723)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4462)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4454)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4338)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4320)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4851)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4839)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4838)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5052)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:5018)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:5001)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:5000)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:5006)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5063)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:51)

4月 07, 2021 8:02:06 下午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2837)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$16(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4810)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3022)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:3015)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:3000)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2996)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2819)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2109)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4247)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4201)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4130)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3983)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3968)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4891)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4885)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4901)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4881)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4738)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4723)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4462)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4454)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4338)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4320)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4851)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4839)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4838)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5052)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:5018)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:5001)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:5000)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:5006)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5063)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:51)

4月 07, 2021 8:02:07 下午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2837)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$16(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4810)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3022)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:3015)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:3000)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2996)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2819)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2109)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4247)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4201)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4130)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3983)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3968)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4891)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4885)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4901)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4881)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4738)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4723)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4462)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4454)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4338)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4320)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4851)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4839)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4838)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5052)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:5018)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:5001)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:5000)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:5006)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5063)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:51)

4月 07, 2021 8:02:09 下午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2837)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$16(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4810)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3022)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:3015)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:3000)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2996)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2819)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2109)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4247)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4201)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4130)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3983)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3968)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4891)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4885)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4901)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4881)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4738)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4723)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4462)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4454)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4338)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4320)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4851)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4839)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4838)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5052)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:5018)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:5001)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:5000)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:5006)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5063)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:51)

4月 07, 2021 8:02:10 下午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2837)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$16(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4810)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3022)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:3015)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:3000)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2996)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2819)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2109)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4247)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4201)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4130)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3983)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3968)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4891)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4885)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4901)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4881)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4738)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4723)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4462)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4454)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4338)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4320)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4851)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4839)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4838)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5052)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:5018)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:5001)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:5000)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:5006)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5063)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:51)

4月 07, 2021 8:02:11 下午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2837)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$16(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4810)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3022)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:3015)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:3000)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2996)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2819)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2109)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4247)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4201)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4130)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3983)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3968)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4891)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4885)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4901)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4881)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4738)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4723)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4462)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4454)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4338)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4320)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4851)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4839)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4838)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5052)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:5018)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:5001)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:5000)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:5006)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5063)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:51)

4月 07, 2021 8:02:12 下午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2837)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$16(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4810)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3022)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:3015)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:3000)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2996)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2819)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2109)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4247)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4201)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4130)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3983)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3968)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4891)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4885)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4901)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4881)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4738)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4723)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4462)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4454)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4338)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4320)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4851)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4839)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4838)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5052)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:5018)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:5001)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:5000)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:5006)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5063)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:51)

4月 07, 2021 8:02:13 下午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2837)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$16(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4810)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3022)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:3015)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:3000)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2996)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2819)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2109)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4247)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4201)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4130)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3983)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3968)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4891)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4885)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4901)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4881)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4738)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4723)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4462)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4454)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4338)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4320)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4851)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4839)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4838)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5052)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:5018)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:5001)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:5000)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:5006)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5063)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:51)

4月 07, 2021 8:02:13 下午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2837)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$16(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4810)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3022)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:3015)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:3000)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2996)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2819)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2109)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4247)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4201)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4130)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3983)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3968)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4891)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4885)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4901)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4881)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4738)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4723)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4462)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4454)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4338)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4320)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4851)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4839)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4838)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5052)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:5018)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:5001)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:5000)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:5006)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5063)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:51)

4月 07, 2021 8:02:14 下午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2837)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$16(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4810)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3022)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:3015)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:3000)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2996)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2819)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2109)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4247)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4201)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4130)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3983)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3968)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4891)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4885)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4901)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4881)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4738)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4723)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4462)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4454)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4338)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4320)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4851)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4839)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4838)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5052)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:5018)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:5001)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:5000)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:5006)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5063)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:51)

4月 07, 2021 8:02:15 下午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2837)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$16(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4810)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3022)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:3015)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:3000)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2996)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2819)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2109)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4247)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4201)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4130)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3983)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3968)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4891)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4885)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4901)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4881)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4738)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4723)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4462)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4454)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4338)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4320)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4851)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4839)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4838)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5052)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:5018)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:5001)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:5000)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:5006)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5063)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:51)

4月 07, 2021 8:02:17 下午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2837)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$16(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4810)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3022)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:3015)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:3000)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2996)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2819)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2109)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4247)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4201)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4130)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3983)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3968)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4891)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4885)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4901)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4881)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4738)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4723)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4462)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4454)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4338)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4320)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4851)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4839)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4838)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5052)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:5018)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:5001)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:5000)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:5006)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5063)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:51)

4月 07, 2021 8:02:18 下午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2837)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$16(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4810)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3022)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:3015)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:3000)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2996)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2819)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2109)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4247)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4201)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4130)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3983)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3968)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4891)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4885)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4901)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4881)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4738)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4723)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4462)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4454)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4338)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4320)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4851)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4839)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4838)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5052)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:5018)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:5001)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:5000)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:5006)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5063)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:51)

4月 07, 2021 8:02:20 下午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2837)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$16(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4810)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3022)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:3015)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:3000)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2996)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2819)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2109)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4247)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4201)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4130)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3983)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3968)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4891)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4885)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4901)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4881)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4738)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4723)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4462)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4454)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4338)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4320)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4851)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4839)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4838)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5052)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:5018)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:5001)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:5000)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:5006)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5063)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:51)

4月 07, 2021 8:02:24 下午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2837)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$16(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4810)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3022)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:3015)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:3000)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2996)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2819)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2109)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4247)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4201)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4130)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3983)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3968)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4891)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4885)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4901)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4881)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4738)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4723)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4462)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4454)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4338)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4320)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4851)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4839)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4838)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5052)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:5018)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:5001)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:5000)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:5006)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5063)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:51)

4月 07, 2021 8:02:24 下午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2837)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$16(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4810)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3022)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:3015)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:3000)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2996)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2819)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2109)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4247)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4201)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4130)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3983)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3968)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4891)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4885)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4901)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4881)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4738)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4723)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4462)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4454)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4338)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4320)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4851)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4839)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4838)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5052)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:5018)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:5001)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:5000)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:5006)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5063)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:51)

4月 07, 2021 8:02:24 下午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2837)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$16(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4810)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3022)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:3015)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:3000)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2996)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2819)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2109)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4247)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4201)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4130)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3983)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3968)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4891)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4885)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4901)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4881)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4738)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4723)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4462)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4454)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4338)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4320)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4851)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4839)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4838)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5052)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:5018)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:5001)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:5000)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:5006)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5063)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:51)

4月 07, 2021 8:02:29 下午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2837)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$16(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4810)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3022)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:3015)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:3000)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2996)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2819)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2109)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4247)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4201)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4130)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3983)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3968)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4891)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4885)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4901)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4881)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4738)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4723)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4462)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4454)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4338)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4320)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4851)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4839)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4838)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5052)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:5018)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:5001)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:5000)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:5006)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5063)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:51)

4月 07, 2021 8:02:30 下午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2837)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$16(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4810)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3022)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:3015)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:3000)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2996)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2819)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2109)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4247)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4201)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4130)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3983)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3968)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4891)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4885)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4901)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4881)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4738)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4723)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4462)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4454)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4338)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4320)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4851)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4839)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4838)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5052)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:5018)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:5001)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:5000)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:5006)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5063)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:51)

4月 07, 2021 8:02:32 下午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2837)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$16(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4810)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3022)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:3015)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:3000)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2996)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2819)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2109)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4247)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4201)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4130)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3983)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3968)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4891)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4885)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4901)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4881)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4738)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4723)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4462)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4454)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4338)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4320)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4851)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4839)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4838)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5052)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:5018)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:5001)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:5000)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:5006)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5063)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:51)

4月 07, 2021 8:02:32 下午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2837)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$16(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4810)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3022)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:3015)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:3000)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2996)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2819)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2109)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4247)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4201)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4130)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3983)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3968)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4891)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4885)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4901)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4881)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4738)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4723)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4462)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4454)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4338)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4320)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4851)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4839)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4838)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5052)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:5018)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:5001)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:5000)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:5006)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5063)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:51)

4月 07, 2021 8:02:33 下午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2837)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$16(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4810)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3022)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:3015)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:3000)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2996)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2819)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2109)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4247)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4201)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4130)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3983)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3968)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4891)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4885)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4901)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4881)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4738)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4723)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4462)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4454)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4338)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4320)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4851)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4839)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4838)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5052)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:5018)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:5001)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:5000)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:5006)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5063)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:51)

4月 07, 2021 8:02:34 下午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2837)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$16(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4810)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3022)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:3015)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:3000)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2996)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2819)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2109)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4247)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4201)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4130)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3983)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3968)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4891)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4885)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4901)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4881)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4738)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4723)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4462)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4454)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4338)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4320)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4851)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4839)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4838)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5052)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:5018)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:5001)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:5000)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:5006)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5063)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:51)

4月 07, 2021 8:02:36 下午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2837)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$16(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4810)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3022)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:3015)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:3000)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2996)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2819)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2109)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4247)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4201)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4130)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3983)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3968)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4891)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4885)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4901)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4881)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4738)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4723)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4462)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4454)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4338)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4320)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4851)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4839)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4838)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5052)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:5018)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:5001)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:5000)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:5006)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5063)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:51)

4月 07, 2021 8:02:37 下午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2837)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$16(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4810)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3022)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:3015)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:3000)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2996)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2819)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2109)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4247)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4201)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4130)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3983)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3968)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4891)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4885)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4901)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4881)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4738)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4723)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4462)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4454)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4338)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4320)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4851)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4839)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4838)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5052)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:5018)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:5001)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:5000)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:5006)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5063)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:51)

4月 07, 2021 8:02:39 下午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2837)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$16(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4810)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3022)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:3015)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:3000)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2996)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2819)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2109)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4247)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4201)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4130)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3983)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3968)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4891)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4885)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4901)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4881)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4738)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4723)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4462)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4454)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4338)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4320)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4851)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4839)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4838)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5052)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:5018)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:5001)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:5000)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:5006)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5063)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:51)

4月 07, 2021 8:02:40 下午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2837)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$16(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4810)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3022)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:3015)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:3000)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2996)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2819)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2109)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4247)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4201)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4130)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3983)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3968)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4891)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4885)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4901)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4881)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4738)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4723)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4462)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4454)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4338)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4320)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4851)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4839)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4838)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5052)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:5018)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:5001)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:5000)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:5006)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5063)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:51)

4月 07, 2021 8:02:41 下午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2837)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$16(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4810)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3022)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:3015)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:3000)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2996)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2819)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2109)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4247)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4201)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4130)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3983)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3968)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4891)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4885)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4901)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4881)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4738)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4723)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4462)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4454)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4338)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4320)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4851)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4839)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4838)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5052)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:5018)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:5001)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:5000)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:5006)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5063)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:51)

4月 07, 2021 8:02:41 下午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2837)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$16(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4810)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3022)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:3015)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:3000)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2996)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2819)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2109)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4247)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4201)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4130)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3983)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3968)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4891)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4885)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4901)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4881)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4738)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4723)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4462)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4454)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4338)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4320)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4851)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4839)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4838)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5052)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:5018)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:5001)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:5000)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:5006)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5063)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:51)

4月 07, 2021 8:02:42 下午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2837)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$16(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4810)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3022)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:3015)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:3000)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2996)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2819)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2109)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4247)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4201)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4130)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3983)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3968)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4891)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4885)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4901)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4881)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4738)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4723)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4462)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4454)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4338)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4320)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4851)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4839)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4838)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5052)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:5018)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:5001)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:5000)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:5006)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5063)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:51)

4月 07, 2021 8:02:42 下午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2837)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$16(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4810)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3022)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:3015)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:3000)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2996)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2819)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2109)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4247)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4201)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4130)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3983)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3968)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4891)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4885)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4901)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4881)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4738)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4723)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4462)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4454)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4338)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4320)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4851)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4839)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4838)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5052)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:5018)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:5001)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:5000)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:5006)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5063)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:51)

4月 07, 2021 8:02:43 下午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2837)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$16(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4810)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3022)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:3015)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:3000)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2996)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2819)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2109)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4247)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4201)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4130)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3983)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3968)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4891)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4885)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4901)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4881)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4738)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4723)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4462)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4454)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4338)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4320)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4851)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4839)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4838)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5052)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:5018)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:5001)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:5000)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:5006)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5063)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:51)

4月 07, 2021 8:02:43 下午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2837)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$16(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4810)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3022)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:3015)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:3000)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2996)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2819)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2109)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4247)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4201)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4130)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3983)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3968)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4891)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4885)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4901)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4881)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4738)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4723)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4462)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4454)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4338)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4320)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4851)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4839)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4838)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5052)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:5018)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:5001)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:5000)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:5006)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5063)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:51)

4月 07, 2021 8:02:44 下午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2837)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$16(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4810)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3022)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:3015)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:3000)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2996)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2819)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2109)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4247)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4201)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4130)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3983)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3968)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4891)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4885)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4901)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4881)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4738)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4723)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4462)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4454)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4338)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4320)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4851)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4839)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4838)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5052)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:5018)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:5001)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:5000)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:5006)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5063)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:51)

4月 07, 2021 8:02:44 下午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2837)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$16(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4810)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3022)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:3015)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:3000)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2996)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2819)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2109)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4247)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4201)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4130)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3983)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3968)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4891)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4885)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4901)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4881)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4738)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4723)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4462)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4454)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4338)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4320)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4851)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4839)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4838)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5052)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:5018)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:5001)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:5000)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:5006)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5063)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:51)

4月 07, 2021 8:02:45 下午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2837)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$16(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4810)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3022)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:3015)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:3000)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2996)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2819)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2109)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4247)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4201)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4130)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3983)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3968)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4891)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4885)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4901)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4881)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4738)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4723)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4462)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4454)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4338)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4320)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4851)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4839)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4838)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5052)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:5018)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:5001)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:5000)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:5006)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5063)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:51)

4月 07, 2021 8:02:49 下午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F104%2Ftest.scala:19: error: illegal start of simple expression
   }
   ^
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2837)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$16(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2337)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockStatSeq$2(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.stat(ScalametaParser.scala:4810)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4967)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3022)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:3015)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:3000)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2996)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2819)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2109)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4247)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4201)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4130)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3983)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3968)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4891)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4885)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4901)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4881)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4738)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4723)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4462)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4454)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4338)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4320)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4851)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4839)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4838)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5052)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:5018)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:5001)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:5000)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:5006)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5063)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:51)

[0m2021.04.07 20:02:51 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/leetcode/104/test.scala[0m
[0m2021.04.07 20:03:02 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/leetcode/104/test.scala[0m
4月 07, 2021 8:10:27 下午 org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
警告: Unmatched cancel notification for request id 832
[0m2021.04.07 20:35:47 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/leetcode/104/test.scala[0m
[0m2021.04.08 15:13:24 INFO  Started: Metals version 0.10.1 in workspace '/Users/zhenhuli/private/zhenhuli-blog' for client vscode 1.55.0.[0m
[0m2021.04.08 15:13:27 INFO  time: initialize in 2.14s[0m
[0m2021.04.08 15:13:27 WARN  Build server is not auto-connectable.[0m
[0m2021.04.08 15:13:27 WARN  no build tool detected in workspace '/Users/zhenhuli/private/zhenhuli-blog'. The most common cause for this problem is that the editor was opened in the wrong working directory, for example if you use sbt then the workspace directory should contain build.sbt. [0m
4月 08, 2021 3:23:19 下午 org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint notify
信息: Unsupported notification method: $/setTraceNotification
[0m2021.04.08 15:50:45 INFO  shutting down Metals[0m
[0m2021.04.09 20:45:12 INFO  Started: Metals version 0.10.1 in workspace '/Users/zhenhuli/private/zhenhuli-blog' for client vscode 1.55.0.[0m
[0m2021.04.09 20:45:14 INFO  time: initialize in 1.4s[0m
[0m2021.04.09 20:45:14 WARN  Build server is not auto-connectable.[0m
[0m2021.04.09 20:45:14 WARN  no build tool detected in workspace '/Users/zhenhuli/private/zhenhuli-blog'. The most common cause for this problem is that the editor was opened in the wrong working directory, for example if you use sbt then the workspace directory should contain build.sbt. [0m
[0m2021.04.09 20:45:14 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/leetcode/9999/test.scala[0m
[0m2021.04.09 20:45:18 INFO  no build target: using presentation compiler with only scala-library: 2.12.13[0m
[0m2021.04.09 20:45:18 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/leetcode/9999/_test.scala[0m
4月 09, 2021 8:45:18 下午 org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
严重: Internal error: java.nio.file.NoSuchFileException: /Users/zhenhuli/private/zhenhuli-blog/leetcode/9999/test.scala
java.util.concurrent.CompletionException: java.nio.file.NoSuchFileException: /Users/zhenhuli/private/zhenhuli-blog/leetcode/9999/test.scala
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:331)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:346)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:704)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:506)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2152)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:64)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: java.nio.file.NoSuchFileException: /Users/zhenhuli/private/zhenhuli-blog/leetcode/9999/test.scala
	at java.base/sun.nio.fs.UnixException.translateToIOException(UnixException.java:92)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:111)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:116)
	at java.base/sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:219)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:375)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:426)
	at java.base/java.nio.file.Files.readAllBytes(Files.java:3272)
	at scala.meta.internal.io.PlatformFileIO$.slurp(PlatformFileIO.scala:45)
	at scala.meta.internal.io.FileIO$.slurp(FileIO.scala:24)
	at scala.meta.internal.mtags.CommonMtagsEnrichments$XtensionAbsolutePath.toInput(CommonMtagsEnrichments.scala:435)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionAbsolutePathBuffers.toInputFromBuffers(MetalsEnrichments.scala:321)
	at scala.meta.internal.metals.Compilers.originInput$1(Compilers.scala:192)
	at scala.meta.internal.metals.Compilers.$anonfun$didChange$2(Compilers.scala:205)
	at scala.Option.getOrElse(Option.scala:189)
	at scala.meta.internal.metals.Compilers.didChange(Compilers.scala:204)
	at scala.meta.internal.metals.MetalsLanguageServer.$anonfun$parseTreesAndPublishDiags$1(MetalsLanguageServer.scala:270)
	at scala.concurrent.Future$.$anonfun$traverse$1(Future.scala:850)
	at scala.collection.LinearSeqOptimized.foldLeft(LinearSeqOptimized.scala:126)
	at scala.collection.LinearSeqOptimized.foldLeft$(LinearSeqOptimized.scala:122)
	at scala.collection.immutable.List.foldLeft(List.scala:91)
	at scala.concurrent.Future$.traverse(Future.scala:850)
	at scala.meta.internal.metals.MetalsLanguageServer.parseTreesAndPublishDiags(MetalsLanguageServer.scala:267)
	at scala.meta.internal.metals.MetalsLanguageServer.$anonfun$parseTrees$2(MetalsLanguageServer.scala:189)
	at scala.concurrent.Future.$anonfun$flatMap$1(Future.scala:307)
	at scala.concurrent.impl.Promise.$anonfun$transformWith$1(Promise.scala:41)
	... 4 more

[0m2021.04.09 20:45:20 INFO  time: code lens generation in 1.04s[0m
[0m2021.04.09 20:45:20 INFO  time: code lens generation in 1.93s[0m
[0m2021.04.09 20:45:20 ERROR text document: file:///Users/zhenhuli/private/zhenhuli-blog/leetcode/9999/test.scala
java.nio.file.NoSuchFileException: /Users/zhenhuli/private/zhenhuli-blog/leetcode/9999/test.scala
	at sun.nio.fs.UnixException.translateToIOException(UnixException.java:92)
	at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:111)
	at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:116)
	at sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:219)
	at java.nio.file.Files.newByteChannel(Files.java:375)
	at java.nio.file.Files.newByteChannel(Files.java:426)
	at java.nio.file.Files.readAllBytes(Files.java:3272)
	at scala.meta.internal.io.PlatformFileIO$.slurp(PlatformFileIO.scala:45)
	at scala.meta.internal.io.FileIO$.slurp(FileIO.scala:24)
	at scala.meta.internal.metals.InteractiveSemanticdbs.$anonfun$textDocument$1(InteractiveSemanticdbs.scala:77)
	at java.util.HashMap.compute(HashMap.java:1320)
	at java.util.Collections$SynchronizedMap.compute(Collections.java:2732)
	at scala.meta.internal.metals.InteractiveSemanticdbs.textDocument(InteractiveSemanticdbs.scala:76)
	at scala.meta.internal.metals.AggregateSemanticdbs.loop$1(AggregateSemanticdbs.scala:30)
	at scala.meta.internal.metals.AggregateSemanticdbs.textDocument(AggregateSemanticdbs.scala:36)
	at scala.meta.internal.metals.CodeLensProvider.findLenses(CodeLensProvider.scala:22)
	at scala.meta.internal.metals.MetalsLanguageServer.$anonfun$codeLens$2(MetalsLanguageServer.scala:1474)
	at scala.meta.internal.metals.TimerProvider.timedThunk(TimerProvider.scala:25)
	at scala.meta.internal.metals.MetalsLanguageServer.$anonfun$codeLens$1(MetalsLanguageServer.scala:1472)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$apply$2(CancelTokens.scala:26)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:659)
	at scala.util.Success.$anonfun$map$1(Try.scala:255)
	at scala.util.Success.map(Try.scala:213)
	at scala.concurrent.Future.$anonfun$map$1(Future.scala:292)
	at scala.concurrent.impl.Promise.liftedTree1$1(Promise.scala:33)
	at scala.concurrent.impl.Promise.$anonfun$transform$1(Promise.scala:33)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:64)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.lang.Thread.run(Thread.java:832)
[0m
[0m2021.04.09 20:45:20 INFO  time: code lens generation in 5.66s[0m
[0m2021.04.09 20:45:38 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/leetcode/0002/test.scala[0m
[0m2021.04.09 20:45:40 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/leetcode/0002/_test.scala[0m
[0m2021.04.09 20:45:55 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/leetcode/0002/_test.scala[0m
[0m2021.04.09 20:46:21 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/leetcode/0002/_test.scala[0m
[0m2021.04.09 20:46:38 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/leetcode/0002/_test.scala[0m
[0m2021.04.09 20:46:38 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/leetcode/0002/_test.scala[0m
[0m2021.04.09 20:46:44 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/leetcode/0002/_test.scala[0m
[0m2021.04.09 20:46:47 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/leetcode/0002/_test.scala[0m
[0m2021.04.09 20:46:47 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/leetcode/0002/_test.scala[0m
[0m2021.04.09 20:46:57 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/leetcode/0002/_test.scala[0m
[0m2021.04.09 20:47:15 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/leetcode/0002/_test.scala[0m
[0m2021.04.09 20:50:23 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/leetcode/0002/_test.scala[0m
[0m2021.04.09 20:50:57 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/leetcode/0002/_test.scala[0m
4月 09, 2021 8:50:57 下午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F0002%2F_test.scala:13: error: illegal start of simple pattern
    }
    ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F0002%2F_test.scala:13: error: illegal start of simple pattern
    }
    ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3325)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3301)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3412)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3280)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3399)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3332)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3331)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3412)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3280)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3278)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3412)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3246)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3245)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3245)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3412)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$2(ScalametaParser.scala:4019)
	at scala.meta.internal.parsers.ScalametaParser.partOrEllipsis$1(ScalametaParser.scala:1354)
	at scala.meta.internal.parsers.ScalametaParser.tokenSeparated(ScalametaParser.scala:1357)
	at scala.meta.internal.parsers.ScalametaParser.commaSeparated(ScalametaParser.scala:1366)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4019)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:4013)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3979)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4936)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4963)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3022)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:3015)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:3000)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2996)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2819)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2109)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2137)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4259)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4201)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4130)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3983)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3968)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4891)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4885)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4901)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4881)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4738)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4723)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4462)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4454)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4338)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4320)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4851)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4839)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4838)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5052)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:5018)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:5001)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:5000)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:5006)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5063)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:51)

4月 09, 2021 8:50:59 下午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F0002%2F_test.scala:13: error: illegal start of simple pattern
    }
    ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F0002%2F_test.scala:13: error: illegal start of simple pattern
    }
    ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3325)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3301)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3412)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3280)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3399)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3332)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3331)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3412)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3280)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3278)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3412)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3246)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3245)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3245)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3412)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$2(ScalametaParser.scala:4019)
	at scala.meta.internal.parsers.ScalametaParser.partOrEllipsis$1(ScalametaParser.scala:1354)
	at scala.meta.internal.parsers.ScalametaParser.tokenSeparated(ScalametaParser.scala:1357)
	at scala.meta.internal.parsers.ScalametaParser.commaSeparated(ScalametaParser.scala:1366)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4019)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:4013)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3979)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4936)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4963)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3022)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:3015)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:3000)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2996)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2819)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2109)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2137)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4259)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4201)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4130)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3983)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3968)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4891)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4885)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4901)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4881)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4738)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4723)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4462)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4454)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4338)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4320)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4851)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4839)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4838)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5052)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:5018)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:5001)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:5000)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:5006)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5063)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:51)

4月 09, 2021 8:50:59 下午 scala.meta.internal.pc.CompilerAccess handleError
严重: file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F0002%2F_test.scala:13: error: illegal start of simple pattern
    }
    ^
file%3A%2F%2F%2FUsers%2Fzhenhuli%2Fprivate%2Fzhenhuli-blog%2Fleetcode%2F0002%2F_test.scala:13: error: illegal start of simple pattern
    }
    ^
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:16)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.Reporter.syntaxError(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter.syntaxError$(Reporter.scala:17)
	at scala.meta.internal.parsers.Reporter$$anon$1.syntaxError(Reporter.scala:22)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3(ScalametaParser.scala:3325)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.badPattern3$(ScalametaParser.scala:3301)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.badPattern3(ScalametaParser.scala:3412)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern3$1(ScalametaParser.scala:3280)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$simplePattern$2(ScalametaParser.scala:3399)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern(ScalametaParser.scala:3332)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.simplePattern$(ScalametaParser.scala:3331)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.simplePattern(ScalametaParser.scala:3412)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3(ScalametaParser.scala:3280)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern3$(ScalametaParser.scala:3278)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern3(ScalametaParser.scala:3412)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.$anonfun$pattern2$1(ScalametaParser.scala:3246)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2(ScalametaParser.scala:3245)
	at scala.meta.internal.parsers.ScalametaParser$SeqContextSensitive.pattern2$(ScalametaParser.scala:3245)
	at scala.meta.internal.parsers.ScalametaParser$noSeq$.pattern2(ScalametaParser.scala:3412)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$2(ScalametaParser.scala:4019)
	at scala.meta.internal.parsers.ScalametaParser.partOrEllipsis$1(ScalametaParser.scala:1354)
	at scala.meta.internal.parsers.ScalametaParser.tokenSeparated(ScalametaParser.scala:1357)
	at scala.meta.internal.parsers.ScalametaParser.commaSeparated(ScalametaParser.scala:1366)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$patDefOrDcl$1(ScalametaParser.scala:4019)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.patDefOrDcl(ScalametaParser.scala:4013)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3979)
	at scala.meta.internal.parsers.ScalametaParser.localDef(ScalametaParser.scala:4936)
	at scala.meta.internal.parsers.ScalametaParser.blockStatSeq(ScalametaParser.scala:4963)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$block$1(ScalametaParser.scala:3022)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.block(ScalametaParser.scala:3015)
	at scala.meta.internal.parsers.ScalametaParser.blockOrCase$1(ScalametaParser.scala:3000)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$3(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$blockExpr$1(ScalametaParser.scala:3003)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.blockExpr(ScalametaParser.scala:2996)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$simpleExpr0$1(ScalametaParser.scala:2819)
	at scala.meta.internal.parsers.ScalametaParser.atPosTry(ScalametaParser.scala:826)
	at scala.meta.internal.parsers.ScalametaParser.autoPosTry(ScalametaParser.scala:836)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr0(ScalametaParser.scala:2789)
	at scala.meta.internal.parsers.ScalametaParser.simpleExpr(ScalametaParser.scala:2787)
	at scala.meta.internal.parsers.ScalametaParser.prefixExpr(ScalametaParser.scala:2771)
	at scala.meta.internal.parsers.ScalametaParser.postfixExpr(ScalametaParser.scala:2751)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$14(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$expr$2(ScalametaParser.scala:2328)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2214)
	at scala.meta.internal.parsers.ScalametaParser.expr(ScalametaParser.scala:2109)
	at scala.meta.internal.parsers.ScalametaParser.exprMaybeIndented(ScalametaParser.scala:2137)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$funDefRest$1(ScalametaParser.scala:4259)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.funDefRest(ScalametaParser.scala:4201)
	at scala.meta.internal.parsers.ScalametaParser.funDefOrDclOrExtensionOrSecondaryCtor(ScalametaParser.scala:4130)
	at scala.meta.internal.parsers.ScalametaParser.defOrDclOrSecondaryCtor(ScalametaParser.scala:3983)
	at scala.meta.internal.parsers.ScalametaParser.nonLocalDefOrDcl(ScalametaParser.scala:3968)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4891)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$templateStat$1$1.applyOrElse(ScalametaParser.scala:4885)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.templateStats(ScalametaParser.scala:4901)
	at scala.meta.internal.parsers.ScalametaParser.templateStatSeq(ScalametaParser.scala:4881)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$templateBody$1(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.inBraces(ScalametaParser.scala:729)
	at scala.meta.internal.parsers.ScalametaParser.templateBody(ScalametaParser.scala:4730)
	at scala.meta.internal.parsers.ScalametaParser.templateBodyOpt(ScalametaParser.scala:4738)
	at scala.meta.internal.parsers.ScalametaParser.templateOpt(ScalametaParser.scala:4723)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$objectDef$1(ScalametaParser.scala:4462)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.objectDef(ScalametaParser.scala:4454)
	at scala.meta.internal.parsers.ScalametaParser.tmplDef(ScalametaParser.scala:4338)
	at scala.meta.internal.parsers.ScalametaParser.topLevelTmplDef(ScalametaParser.scala:4320)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4851)
	at scala.meta.internal.parsers.ScalametaParser$$anonfun$topStat$1.applyOrElse(ScalametaParser.scala:4839)
	at scala.runtime.AbstractPartialFunction.apply(AbstractPartialFunction.scala:38)
	at scala.meta.internal.parsers.ScalametaParser.statSeq(ScalametaParser.scala:4829)
	at scala.meta.internal.parsers.ScalametaParser.topStatSeq(ScalametaParser.scala:4838)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$batchSource$1(ScalametaParser.scala:5052)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.batchSource(ScalametaParser.scala:5018)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$source$1(ScalametaParser.scala:5001)
	at scala.meta.internal.parsers.ScalametaParser.atPos(ScalametaParser.scala:817)
	at scala.meta.internal.parsers.ScalametaParser.autoPos(ScalametaParser.scala:833)
	at scala.meta.internal.parsers.ScalametaParser.source(ScalametaParser.scala:5000)
	at scala.meta.internal.parsers.ScalametaParser.entrypointSource(ScalametaParser.scala:5006)
	at scala.meta.internal.parsers.ScalametaParser.$anonfun$parseSource$2(ScalametaParser.scala:142)
	at scala.meta.internal.parsers.ScalametaParser.parseRule(ScalametaParser.scala:52)
	at scala.meta.internal.parsers.ScalametaParser.parseSource(ScalametaParser.scala:142)
	at scala.meta.parsers.Parse$.$anonfun$parseSource$1(Parse.scala:29)
	at scala.meta.internal.parsers.ScalametaParser$$anon$257.apply(ScalametaParser.scala:5063)
	at scala.meta.parsers.Api$XtensionParseDialectInput.parse(Api.scala:25)
	at scala.meta.internal.semanticdb.scalac.ParseOps$XtensionCompilationUnitSource.toSource(ParseOps.scala:17)
	at scala.meta.internal.semanticdb.scalac.TextDocumentOps$XtensionCompilationUnitDocument.toTextDocument(TextDocumentOps.scala:201)
	at scala.meta.internal.pc.SemanticdbTextDocumentProvider.textDocument(SemanticdbTextDocumentProvider.scala:51)

[0m2021.04.09 20:50:59 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/leetcode/0002/_test.scala[0m
[0m2021.04.09 20:51:20 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/leetcode/0002/_test.scala[0m
[0m2021.04.09 20:51:33 WARN  no build target for: /Users/zhenhuli/private/zhenhuli-blog/leetcode/0002/_test.scala[0m
4月 09, 2021 8:58:57 下午 org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint notify
信息: Unsupported notification method: $/setTraceNotification
